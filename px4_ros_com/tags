!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AIRCRAFT_BASELINK_AFFINE	include/px4_ros_com/frame_transforms.h	/^static const Eigen::Affine3d AIRCRAFT_BASELINK_AFFINE(AIRCRAFT_BASELINK_Q);$/;"	p	namespace:px4_ros_com::frame_transforms	signature:(AIRCRAFT_BASELINK_Q)
AIRCRAFT_BASELINK_Q	include/px4_ros_com/frame_transforms.h	/^static const auto AIRCRAFT_BASELINK_Q = utils::quaternion::quaternion_from_euler(M_PI, 0.0, 0.0);$/;"	m	namespace:px4_ros_com::frame_transforms
AIRCRAFT_BASELINK_R	include/px4_ros_com/frame_transforms.h	/^static const auto AIRCRAFT_BASELINK_R = AIRCRAFT_BASELINK_Q.normalized().toRotationMatrix();$/;"	m	namespace:px4_ros_com::frame_transforms
AIRCRAFT_TO_BASELINK	include/px4_ros_com/frame_transforms.h	/^	AIRCRAFT_TO_BASELINK,      \/\/!< change from expressed WRT aircraft frame to WRT to baselink frame$/;"	m	class:px4_ros_com::frame_transforms::StaticTF	access:private
B1000000	templates/microRTPS_transport.cpp	/^#define B1000000 /;"	d	file:
B1500000	templates/microRTPS_transport.cpp	/^#define B1500000 /;"	d	file:
B2000000	templates/microRTPS_transport.cpp	/^#define B2000000 /;"	d	file:
B460800	templates/microRTPS_transport.cpp	/^#define B460800 /;"	d	file:
B500000	templates/microRTPS_transport.cpp	/^#define B500000 /;"	d	file:
B921600	templates/microRTPS_transport.cpp	/^#define B921600 /;"	d	file:
BASELINK_TO_AIRCRAFT	include/px4_ros_com/frame_transforms.h	/^	BASELINK_TO_AIRCRAFT,      \/\/!< change from expressed WRT baselnk to WRT aircraft$/;"	m	class:px4_ros_com::frame_transforms::StaticTF	access:private
BUFFER_SIZE	templates/microRTPS_transport.h	/^#define BUFFER_SIZE /;"	d
CONSTRAINED_FLASH	scripts/px_generate_uorb_topic_files.py	/^CONSTRAINED_FLASH = False$/;"	v
CalledProcessError	test/pipeline_io_test.py	/^from subprocess import call, CalledProcessError, check_output, DEVNULL, Popen, STDOUT$/;"	i
Classifier	scripts/generate_microRTPS_bridge.py	/^from uorb_rtps_classifier import Classifier$/;"	i
Classifier	scripts/uorb_rtps_classifier.py	/^class Classifier():$/;"	c	inherits:
DEFAULT_UART	templates/microRTPS_transport.h	/^#define DEFAULT_UART /;"	d
DEVNULL	test/pipeline_io_test.py	/^from subprocess import call, CalledProcessError, check_output, DEVNULL, Popen, STDOUT$/;"	i
DEVNULL	test/test_input.py	/^from subprocess import call, check_output, DEVNULL$/;"	i
DebugVectAdvertiser	src/examples/advertisers/debug_vect_advertiser.cpp	/^	DebugVectAdvertiser() : Node("debug_vect_advertiser") {$/;"	f	class:DebugVectAdvertiser	access:public	signature:()
DebugVectAdvertiser	src/examples/advertisers/debug_vect_advertiser.cpp	/^class DebugVectAdvertiser : public rclcpp::Node$/;"	c	file:	inherits:rclcpp::Node
DebugVectAdvertiser::DebugVectAdvertiser	src/examples/advertisers/debug_vect_advertiser.cpp	/^	DebugVectAdvertiser() : Node("debug_vect_advertiser") {$/;"	f	class:DebugVectAdvertiser	access:public	signature:()
DebugVectAdvertiser::publisher_	src/examples/advertisers/debug_vect_advertiser.cpp	/^	rclcpp::Publisher<px4_msgs::msg::DebugVect>::SharedPtr publisher_;$/;"	m	class:DebugVectAdvertiser	file:	access:private
DebugVectAdvertiser::timer_	src/examples/advertisers/debug_vect_advertiser.cpp	/^	rclcpp::TimerBase::SharedPtr timer_;$/;"	m	class:DebugVectAdvertiser	file:	access:private
DeclareLaunchArgument	launch/px4_launch.py	/^from launch.actions import IncludeLaunchDescription, DeclareLaunchArgument, ExecuteProcess, SetEnvironmentVariable$/;"	i
Dict	scripts/uorb_rtps_classifier.py	/^from typing import Dict, List, Tuple$/;"	i
ECEF_TO_ENU	include/px4_ros_com/frame_transforms.h	/^	ECEF_TO_ENU,	           \/\/!< change from expressed WRT ECEF frame to WRT ENU frame$/;"	m	class:px4_ros_com::frame_transforms::StaticTF	access:private
ENU_TO_NED	include/px4_ros_com/frame_transforms.h	/^	ENU_TO_NED,	           \/\/!< change from expressed WRT ENU frame to WRT NED frame$/;"	m	class:px4_ros_com::frame_transforms::StaticTF	access:private
ExecuteProcess	launch/px4_launch.py	/^from launch.actions import IncludeLaunchDescription, DeclareLaunchArgument, ExecuteProcess, SetEnvironmentVariable$/;"	i
FMU	templates/microRTPS_transport.h	/^		FMU,$/;"	m	class:MicroRtps::System	access:private
FRAME_TRANSFORMS_H	include/px4_ros_com/frame_transforms.h	/^#define FRAME_TRANSFORMS_H$/;"	d
Header	templates/microRTPS_transport.h	/^	struct __attribute__((packed)) Header {$/;"	s	class:Transport_node	access:private
IDL_TEMPLATE_FILE	scripts/px_generate_uorb_topic_files.py	/^IDL_TEMPLATE_FILE = 'msg.idl.em'$/;"	v
INCL_DEFAULT	scripts/px_generate_uorb_topic_files.py	/^INCL_DEFAULT = ['std_msgs:.\/msg\/std_msgs']$/;"	v
IncludeLaunchDescription	launch/px4_launch.py	/^from launch.actions import IncludeLaunchDescription, DeclareLaunchArgument, ExecuteProcess, SetEnvironmentVariable$/;"	i
LTS_trajectoryGenerator	src/shared_control/offboard_control_original.cpp	/^	void LTS_trajectoryGenerator() const;$/;"	p	class:ShotTypeExecuter	file:	access:private	signature:() const
LTS_trajectoryGenerator	src/shared_control/offboard_control_original.cpp	/^void shotTypeExecuter::LTS_trajectoryGenerator() const{$/;"	f	class:shotTypeExecuter	signature:() const
LaunchConfiguration	launch/px4_launch.py	/^from launch.substitutions import LaunchConfiguration$/;"	i
LaunchDescription	launch/px4_launch.py	/^from launch import LaunchDescription$/;"	i
LaunchDescription	launch/sensor_combined_listener.launch.py	/^from launch import LaunchDescription$/;"	i
List	scripts/uorb_rtps_classifier.py	/^from typing import Dict, List, Tuple$/;"	i
MicroRtps	templates/microRTPS_transport.h	/^namespace MicroRtps {$/;"	n
MicroRtps::System	templates/microRTPS_transport.h	/^	enum class System {$/;"	c	namespace:MicroRtps
MicroRtps::System::FMU	templates/microRTPS_transport.h	/^		FMU,$/;"	m	class:MicroRtps::System	access:private
MsgScope	scripts/px_generate_uorb_topic_files.py	/^class MsgScope:$/;"	c	inherits:
NED_ENU_AFFINE	include/px4_ros_com/frame_transforms.h	/^static const Eigen::Affine3d NED_ENU_AFFINE(NED_ENU_Q);$/;"	p	namespace:px4_ros_com::frame_transforms	signature:(NED_ENU_Q)
NED_ENU_Q	include/px4_ros_com/frame_transforms.h	/^static const auto NED_ENU_Q = utils::quaternion::quaternion_from_euler(M_PI, 0.0, M_PI_2);$/;"	m	namespace:px4_ros_com::frame_transforms
NED_ENU_R	include/px4_ros_com/frame_transforms.h	/^static const auto NED_ENU_R = NED_ENU_Q.normalized().toRotationMatrix();$/;"	m	namespace:px4_ros_com::frame_transforms
NED_TO_ENU	include/px4_ros_com/frame_transforms.h	/^	NED_TO_ENU,	           \/\/!< change from expressed WRT NED frame to WRT ENU frame$/;"	m	class:px4_ros_com::frame_transforms::StaticTF	access:private
NONE	scripts/px_generate_uorb_topic_files.py	/^    NONE = 0$/;"	v	class:MsgScope
Node	launch/px4_launch.py	/^from launch_ros.actions import Node$/;"	i
OUTPUT_FILE_EXT	scripts/px_generate_uorb_topic_files.py	/^OUTPUT_FILE_EXT = ['.h', '.cpp']$/;"	v
OffboardControl	src/examples/offboard/offboard_control.cpp	/^	OffboardControl() : Node("offboard_control") {$/;"	f	class:OffboardControl	access:public	signature:()
OffboardControl	src/examples/offboard/offboard_control.cpp	/^class OffboardControl : public rclcpp::Node {$/;"	c	file:	inherits:rclcpp::Node
OffboardControl	src/examples/offboard/offboard_control_original.cpp	/^	OffboardControl() : Node("offboard_control") {$/;"	f	class:OffboardControl	access:public	signature:()
OffboardControl	src/examples/offboard/offboard_control_original.cpp	/^class OffboardControl : public rclcpp::Node {$/;"	c	file:	inherits:rclcpp::Node
OffboardControl::OffboardControl	src/examples/offboard/offboard_control.cpp	/^	OffboardControl() : Node("offboard_control") {$/;"	f	class:OffboardControl	access:public	signature:()
OffboardControl::OffboardControl	src/examples/offboard/offboard_control_original.cpp	/^	OffboardControl() : Node("offboard_control") {$/;"	f	class:OffboardControl	access:public	signature:()
OffboardControl::arm	src/examples/offboard/offboard_control.cpp	/^	void arm() const;$/;"	p	class:OffboardControl	file:	access:public	signature:() const
OffboardControl::arm	src/examples/offboard/offboard_control.cpp	/^void OffboardControl::arm() const {$/;"	f	class:OffboardControl	signature:() const
OffboardControl::arm	src/examples/offboard/offboard_control_original.cpp	/^	void arm() const;$/;"	p	class:OffboardControl	file:	access:public	signature:() const
OffboardControl::arm	src/examples/offboard/offboard_control_original.cpp	/^void OffboardControl::arm() const {$/;"	f	class:OffboardControl	signature:() const
OffboardControl::arm	src/shared_control/offboard_control_original.cpp	/^void OffboardControl::arm() const {$/;"	f	class:OffboardControl	signature:() const
OffboardControl::disarm	src/examples/offboard/offboard_control.cpp	/^	void disarm() const;$/;"	p	class:OffboardControl	file:	access:public	signature:() const
OffboardControl::disarm	src/examples/offboard/offboard_control.cpp	/^void OffboardControl::disarm() const {$/;"	f	class:OffboardControl	signature:() const
OffboardControl::disarm	src/examples/offboard/offboard_control_original.cpp	/^	void disarm() const;$/;"	p	class:OffboardControl	file:	access:public	signature:() const
OffboardControl::disarm	src/examples/offboard/offboard_control_original.cpp	/^void OffboardControl::disarm() const {$/;"	f	class:OffboardControl	signature:() const
OffboardControl::disarm	src/shared_control/offboard_control_original.cpp	/^void OffboardControl::disarm() const {$/;"	f	class:OffboardControl	signature:() const
OffboardControl::offboard_control_mode_publisher_	src/examples/offboard/offboard_control.cpp	/^	rclcpp::Publisher<OffboardControlMode>::SharedPtr offboard_control_mode_publisher_;$/;"	m	class:OffboardControl	file:	access:private
OffboardControl::offboard_control_mode_publisher_	src/examples/offboard/offboard_control_original.cpp	/^	rclcpp::Publisher<OffboardControlMode>::SharedPtr offboard_control_mode_publisher_;$/;"	m	class:OffboardControl	file:	access:private
OffboardControl::offboard_setpoint_counter_	src/examples/offboard/offboard_control.cpp	/^	uint64_t offboard_setpoint_counter_;   \/\/!< counter for the number of setpoints sent$/;"	m	class:OffboardControl	file:	access:private
OffboardControl::offboard_setpoint_counter_	src/examples/offboard/offboard_control_original.cpp	/^	uint64_t offboard_setpoint_counter_;   \/\/!< counter for the number of setpoints sent$/;"	m	class:OffboardControl	file:	access:private
OffboardControl::publish_offboard_control_mode	src/examples/offboard/offboard_control.cpp	/^	void publish_offboard_control_mode() const;$/;"	p	class:OffboardControl	file:	access:private	signature:() const
OffboardControl::publish_offboard_control_mode	src/examples/offboard/offboard_control.cpp	/^void OffboardControl::publish_offboard_control_mode() const {$/;"	f	class:OffboardControl	signature:() const
OffboardControl::publish_offboard_control_mode	src/examples/offboard/offboard_control_original.cpp	/^	void publish_offboard_control_mode() const;$/;"	p	class:OffboardControl	file:	access:private	signature:() const
OffboardControl::publish_offboard_control_mode	src/examples/offboard/offboard_control_original.cpp	/^void OffboardControl::publish_offboard_control_mode() const {$/;"	f	class:OffboardControl	signature:() const
OffboardControl::publish_offboard_control_mode	src/shared_control/offboard_control_original.cpp	/^void OffboardControl::publish_offboard_control_mode() const {$/;"	f	class:OffboardControl	signature:() const
OffboardControl::publish_trajectory_setpoint	src/examples/offboard/offboard_control.cpp	/^	void publish_trajectory_setpoint(float x, float y, float z) const;$/;"	p	class:OffboardControl	file:	access:private	signature:(float x, float y, float z) const
OffboardControl::publish_trajectory_setpoint	src/examples/offboard/offboard_control.cpp	/^void OffboardControl::publish_trajectory_setpoint(float x, float y, float z) const {$/;"	f	class:OffboardControl	signature:(float x, float y, float z) const
OffboardControl::publish_trajectory_setpoint	src/examples/offboard/offboard_control_original.cpp	/^	void publish_trajectory_setpoint() const;$/;"	p	class:OffboardControl	file:	access:private	signature:() const
OffboardControl::publish_trajectory_setpoint	src/examples/offboard/offboard_control_original.cpp	/^void OffboardControl::publish_trajectory_setpoint() const {$/;"	f	class:OffboardControl	signature:() const
OffboardControl::publish_trajectory_setpoint	src/shared_control/offboard_control_original.cpp	/^void OffboardControl::publish_trajectory_setpoint() const {$/;"	f	class:OffboardControl	signature:() const
OffboardControl::publish_vehicle_command	src/examples/offboard/offboard_control.cpp	/^	void publish_vehicle_command(uint16_t command, float param1 = 0.0,$/;"	p	class:OffboardControl	file:	access:private	signature:(uint16_t command, float param1 = 0.0, float param2 = 0.0) const
OffboardControl::publish_vehicle_command	src/examples/offboard/offboard_control.cpp	/^void OffboardControl::publish_vehicle_command(uint16_t command, float param1,$/;"	f	class:OffboardControl	signature:(uint16_t command, float param1, float param2) const
OffboardControl::publish_vehicle_command	src/examples/offboard/offboard_control_original.cpp	/^	void publish_vehicle_command(uint16_t command, float param1 = 0.0,$/;"	p	class:OffboardControl	file:	access:private	signature:(uint16_t command, float param1 = 0.0, float param2 = 0.0) const
OffboardControl::publish_vehicle_command	src/examples/offboard/offboard_control_original.cpp	/^void OffboardControl::publish_vehicle_command(uint16_t command, float param1,$/;"	f	class:OffboardControl	signature:(uint16_t command, float param1, float param2) const
OffboardControl::publish_vehicle_command	src/shared_control/offboard_control_original.cpp	/^void OffboardControl::publish_vehicle_command(uint16_t command, float param1,$/;"	f	class:OffboardControl	signature:(uint16_t command, float param1, float param2) const
OffboardControl::sensor_data_computed_sub_	src/examples/offboard/offboard_control.cpp	/^	rclcpp::Subscription<px4_msgs::msg::SensorDataComputed>::SharedPtr sensor_data_computed_sub_;$/;"	m	class:OffboardControl	file:	access:private
OffboardControl::setpoint_x	src/examples/offboard/offboard_control.cpp	/^	float setpoint_x, setpoint_y, setpoint_z, yaw_desired;$/;"	m	class:OffboardControl	file:	access:private
OffboardControl::setpoint_y	src/examples/offboard/offboard_control.cpp	/^	float setpoint_x, setpoint_y, setpoint_z, yaw_desired;$/;"	m	class:OffboardControl	file:	access:private
OffboardControl::setpoint_z	src/examples/offboard/offboard_control.cpp	/^	float setpoint_x, setpoint_y, setpoint_z, yaw_desired;$/;"	m	class:OffboardControl	file:	access:private
OffboardControl::takeoff	src/examples/offboard/offboard_control.cpp	/^	void takeoff() const;$/;"	p	class:OffboardControl	file:	access:private	signature:() const
OffboardControl::takeoff	src/examples/offboard/offboard_control.cpp	/^void OffboardControl::takeoff() const {$/;"	f	class:OffboardControl	signature:() const
OffboardControl::timer_	src/examples/offboard/offboard_control.cpp	/^	rclcpp::TimerBase::SharedPtr timer_;$/;"	m	class:OffboardControl	file:	access:private
OffboardControl::timer_	src/examples/offboard/offboard_control_original.cpp	/^	rclcpp::TimerBase::SharedPtr timer_;$/;"	m	class:OffboardControl	file:	access:private
OffboardControl::timestamp_	src/examples/offboard/offboard_control.cpp	/^	std::atomic<uint64_t> timestamp_;   \/\/!< common synced timestamped$/;"	m	class:OffboardControl	file:	access:private
OffboardControl::timestamp_	src/examples/offboard/offboard_control_original.cpp	/^	std::atomic<uint64_t> timestamp_;   \/\/!< common synced timestamped$/;"	m	class:OffboardControl	file:	access:private
OffboardControl::timesync_sub_	src/examples/offboard/offboard_control.cpp	/^	rclcpp::Subscription<px4_msgs::msg::Timesync>::SharedPtr timesync_sub_;$/;"	m	class:OffboardControl	file:	access:private
OffboardControl::timesync_sub_	src/examples/offboard/offboard_control_original.cpp	/^	rclcpp::Subscription<px4_msgs::msg::Timesync>::SharedPtr timesync_sub_;$/;"	m	class:OffboardControl	file:	access:private
OffboardControl::trajectory_setpoint_publisher_	src/examples/offboard/offboard_control.cpp	/^	rclcpp::Publisher<TrajectorySetpoint>::SharedPtr trajectory_setpoint_publisher_;$/;"	m	class:OffboardControl	file:	access:private
OffboardControl::trajectory_setpoint_publisher_	src/examples/offboard/offboard_control_original.cpp	/^	rclcpp::Publisher<TrajectorySetpoint>::SharedPtr trajectory_setpoint_publisher_;$/;"	m	class:OffboardControl	file:	access:private
OffboardControl::vehicle_command_publisher_	src/examples/offboard/offboard_control.cpp	/^	rclcpp::Publisher<VehicleCommand>::SharedPtr vehicle_command_publisher_;$/;"	m	class:OffboardControl	file:	access:private
OffboardControl::vehicle_command_publisher_	src/examples/offboard/offboard_control_original.cpp	/^	rclcpp::Publisher<VehicleCommand>::SharedPtr vehicle_command_publisher_;$/;"	m	class:OffboardControl	file:	access:private
OffboardControl::yaw_desired	src/examples/offboard/offboard_control.cpp	/^	float setpoint_x, setpoint_y, setpoint_z, yaw_desired;$/;"	m	class:OffboardControl	file:	access:private
PACKAGE	scripts/px_generate_uorb_topic_files.py	/^PACKAGE = 'px4'$/;"	v
Popen	test/pipeline_io_test.py	/^from subprocess import call, CalledProcessError, check_output, DEVNULL, Popen, STDOUT$/;"	i
PublishShotTypeTrajectory	src/shared_control/trajectory_pub.cpp	/^	void PublishShotTypeTrajectory() const;$/;"	p	class:ShotTypeExecuter	file:	access:private	signature:() const
PublishShotTypeTrajectory	src/shared_control/trajectory_pub.cpp	/^void  ShotTypeExecuter::PublishShotTypeTrajectory() const{$/;"	f	class:ShotTypeExecuter	signature:() const
PythonLaunchDescriptionSource	launch/px4_launch.py	/^from launch.launch_description_sources import PythonLaunchDescriptionSource$/;"	i
RECEIVE	scripts/px_generate_uorb_topic_files.py	/^    RECEIVE = 2$/;"	v	class:MsgScope
SEND	scripts/px_generate_uorb_topic_files.py	/^    SEND = 1$/;"	v	class:MsgScope
STDOUT	test/pipeline_io_test.py	/^from subprocess import call, CalledProcessError, check_output, DEVNULL, Popen, STDOUT$/;"	i
SensorCombinedListener	src/examples/listeners/sensor_combined_listener.cpp	/^	explicit SensorCombinedListener() : Node("sensor_combined_listener") {$/;"	f	class:SensorCombinedListener	access:public	signature:()
SensorCombinedListener	src/examples/listeners/sensor_combined_listener.cpp	/^class SensorCombinedListener : public rclcpp::Node$/;"	c	file:	inherits:rclcpp::Node
SensorCombinedListener::SensorCombinedListener	src/examples/listeners/sensor_combined_listener.cpp	/^	explicit SensorCombinedListener() : Node("sensor_combined_listener") {$/;"	f	class:SensorCombinedListener	access:public	signature:()
SensorCombinedListener::subscription_	src/examples/listeners/sensor_combined_listener.cpp	/^	rclcpp::Subscription<px4_msgs::msg::SensorCombined>::SharedPtr subscription_;$/;"	m	class:SensorCombinedListener	file:	access:private
SensorFusion	src/shared_control/sensor_combined.cpp	/^	SensorFusion() : Node("sensor_fusion") {$/;"	f	class:SensorFusion	access:public	signature:()
SensorFusion	src/shared_control/sensor_combined.cpp	/^class SensorFusion : public rclcpp::Node {$/;"	c	file:	inherits:rclcpp::Node
SensorFusion::SensorFusion	src/shared_control/sensor_combined.cpp	/^	SensorFusion() : Node("sensor_fusion") {$/;"	f	class:SensorFusion	access:public	signature:()
SensorFusion::count	src/shared_control/sensor_combined.cpp	/^	int count = 0;$/;"	m	class:SensorFusion	file:	access:private
SensorFusion::gimbal_x	src/shared_control/sensor_combined.cpp	/^	float gimbal_x;$/;"	m	class:SensorFusion	file:	access:private
SensorFusion::gimbal_y	src/shared_control/sensor_combined.cpp	/^	float gimbal_y;$/;"	m	class:SensorFusion	file:	access:private
SensorFusion::gimbal_z	src/shared_control/sensor_combined.cpp	/^	float gimbal_z;$/;"	m	class:SensorFusion	file:	access:private
SensorFusion::publisher_	src/shared_control/sensor_combined.cpp	/^	rclcpp::Publisher<px4_msgs::msg::SensorDataComputed>::SharedPtr publisher_;	$/;"	m	class:SensorFusion	file:	access:private
SensorFusion::target_position_sub_	src/shared_control/sensor_combined.cpp	/^	rclcpp::Subscription<nav_msgs::msg::Odometry>::SharedPtr target_position_sub_;$/;"	m	class:SensorFusion	file:	access:private
SensorFusion::target_x	src/shared_control/sensor_combined.cpp	/^	float target_x;$/;"	m	class:SensorFusion	file:	access:private
SensorFusion::target_y	src/shared_control/sensor_combined.cpp	/^	float target_y;$/;"	m	class:SensorFusion	file:	access:private
SensorFusion::target_z	src/shared_control/sensor_combined.cpp	/^	float target_z;$/;"	m	class:SensorFusion	file:	access:private
SensorFusion::timer_	src/shared_control/sensor_combined.cpp	/^	rclcpp::TimerBase::SharedPtr timer_;$/;"	m	class:SensorFusion	file:	access:private
SensorFusion::timestamp_	src/shared_control/sensor_combined.cpp	/^	std::atomic<uint64_t> timestamp_;   \/\/!< common synced timestamped$/;"	m	class:SensorFusion	file:	access:private
SensorFusion::timesync_sub_	src/shared_control/sensor_combined.cpp	/^	rclcpp::Subscription<px4_msgs::msg::Timesync>::SharedPtr timesync_sub_;$/;"	m	class:SensorFusion	file:	access:private
SensorFusion::vehicle_position_sub_	src/shared_control/sensor_combined.cpp	/^	rclcpp::Subscription<px4_msgs::msg::VehicleOdometry>::SharedPtr vehicle_position_sub_;$/;"	m	class:SensorFusion	file:	access:private
SensorFusion::vehicle_x	src/shared_control/sensor_combined.cpp	/^	float vehicle_x, vehicle_xv;$/;"	m	class:SensorFusion	file:	access:private
SensorFusion::vehicle_xv	src/shared_control/sensor_combined.cpp	/^	float vehicle_x, vehicle_xv;$/;"	m	class:SensorFusion	file:	access:private
SensorFusion::vehicle_y	src/shared_control/sensor_combined.cpp	/^	float vehicle_y, vehicle_yv;$/;"	m	class:SensorFusion	file:	access:private
SensorFusion::vehicle_yv	src/shared_control/sensor_combined.cpp	/^	float vehicle_y, vehicle_yv;$/;"	m	class:SensorFusion	file:	access:private
SensorFusion::vehicle_z	src/shared_control/sensor_combined.cpp	/^	float vehicle_z, vehicle_zv;$/;"	m	class:SensorFusion	file:	access:private
SensorFusion::vehicle_zv	src/shared_control/sensor_combined.cpp	/^	float vehicle_z, vehicle_zv;$/;"	m	class:SensorFusion	file:	access:private
SetEnvironmentVariable	launch/px4_launch.py	/^from launch.actions import IncludeLaunchDescription, DeclareLaunchArgument, ExecuteProcess, SetEnvironmentVariable$/;"	i
ShotTypeExecuter	src/shared_control/offboard_control_original.cpp	/^	ShotTypeExecuter() : Node("Shot_Type_Executer") {$/;"	f	class:ShotTypeExecuter	access:public	signature:()
ShotTypeExecuter	src/shared_control/offboard_control_original.cpp	/^class ShotTypeExecuter : public rclcpp::Node {$/;"	c	file:	inherits:rclcpp::Node
ShotTypeExecuter	src/shared_control/trajectory_pub.cpp	/^	ShotTypeExecuter() : Node("Shot_Type_Executer") {$/;"	f	class:ShotTypeExecuter	access:public	signature:()
ShotTypeExecuter	src/shared_control/trajectory_pub.cpp	/^class ShotTypeExecuter : public rclcpp::Node {$/;"	c	file:	inherits:rclcpp::Node
ShotTypeExecuter::LTS_trajectoryGenerator	src/shared_control/offboard_control_original.cpp	/^	void LTS_trajectoryGenerator() const;$/;"	p	class:ShotTypeExecuter	file:	access:private	signature:() const
ShotTypeExecuter::PublishShotTypeTrajectory	src/shared_control/trajectory_pub.cpp	/^	void PublishShotTypeTrajectory() const;$/;"	p	class:ShotTypeExecuter	file:	access:private	signature:() const
ShotTypeExecuter::PublishShotTypeTrajectory	src/shared_control/trajectory_pub.cpp	/^void  ShotTypeExecuter::PublishShotTypeTrajectory() const{$/;"	f	class:ShotTypeExecuter	signature:() const
ShotTypeExecuter::ShotTypeExecuter	src/shared_control/offboard_control_original.cpp	/^	ShotTypeExecuter() : Node("Shot_Type_Executer") {$/;"	f	class:ShotTypeExecuter	access:public	signature:()
ShotTypeExecuter::ShotTypeExecuter	src/shared_control/trajectory_pub.cpp	/^	ShotTypeExecuter() : Node("Shot_Type_Executer") {$/;"	f	class:ShotTypeExecuter	access:public	signature:()
ShotTypeExecuter::TrajectoryGenerator	src/shared_control/trajectory_pub.cpp	/^	void TrajectoryGenerator();$/;"	p	class:ShotTypeExecuter	file:	access:private	signature:()
ShotTypeExecuter::TrajectoryGenerator	src/shared_control/trajectory_pub.cpp	/^void ShotTypeExecuter::TrajectoryGenerator(){$/;"	f	class:ShotTypeExecuter	signature:()
ShotTypeExecuter::publish_offboard_control_mode	src/shared_control/offboard_control_original.cpp	/^	void publish_offboard_control_mode() const;$/;"	p	class:ShotTypeExecuter	file:	access:private	signature:() const
ShotTypeExecuter::publish_shotTypetrajectory	src/shared_control/offboard_control_original.cpp	/^	void publish_shotTypetrajectory() const;$/;"	p	class:ShotTypeExecuter	file:	access:private	signature:() const
ShotTypeExecuter::publish_trajectory_setpoint	src/shared_control/offboard_control_original.cpp	/^	void publish_trajectory_setpoint() const;$/;"	p	class:ShotTypeExecuter	file:	access:private	signature:() const
ShotTypeExecuter::publish_vehicle_command	src/shared_control/offboard_control_original.cpp	/^	void publish_vehicle_command(uint16_t command, float param1 = 0.0,$/;"	p	class:ShotTypeExecuter	file:	access:private	signature:(uint16_t command, float param1 = 0.0, float param2 = 0.0) const
ShotTypeExecuter::sensor_combined_sub_	src/shared_control/offboard_control_original.cpp	/^	rclcpp::Subscription<px4_msgs::msg::SensorDataComputed> sensor_combined_sub_;$/;"	m	class:ShotTypeExecuter	file:	access:private
ShotTypeExecuter::sensor_combined_sub_	src/shared_control/trajectory_pub.cpp	/^	rclcpp::Subscription<px4_msgs::msg::SensorDataComputed> sensor_combined_sub_;$/;"	m	class:ShotTypeExecuter	file:	access:private
ShotTypeExecuter::shot_type_	src/shared_control/offboard_control_original.cpp	/^	int shot_type_;$/;"	m	class:ShotTypeExecuter	file:	access:private
ShotTypeExecuter::shot_type_	src/shared_control/trajectory_pub.cpp	/^	int shot_type_;$/;"	m	class:ShotTypeExecuter	file:	access:private
ShotTypeExecuter::shot_type_enum	src/shared_control/offboard_control_original.cpp	/^	enum shot_type_enum = {$/;"	x	file:
ShotTypeExecuter::shottype_trajectory_pub_	src/shared_control/offboard_control_original.cpp	/^	rclcpp::Publisher<TrajectorySetpoint>::SharedPtr shottype_trajectory_pub_;$/;"	m	class:ShotTypeExecuter	file:	access:private
ShotTypeExecuter::shottype_trajectory_pub_	src/shared_control/trajectory_pub.cpp	/^	rclcpp::Publisher<MultiDOFJointTrajectoryPoint>::SharedPtr shottype_trajectory_pub_;$/;"	m	class:ShotTypeExecuter	file:	access:private
ShotTypeExecuter::target_x_	src/shared_control/offboard_control_original.cpp	/^	float target_x_;$/;"	m	class:ShotTypeExecuter	file:	access:private
ShotTypeExecuter::target_x_	src/shared_control/trajectory_pub.cpp	/^	float target_x_;$/;"	m	class:ShotTypeExecuter	file:	access:private
ShotTypeExecuter::target_y_	src/shared_control/offboard_control_original.cpp	/^	float target_y_;$/;"	m	class:ShotTypeExecuter	file:	access:private
ShotTypeExecuter::target_y_	src/shared_control/trajectory_pub.cpp	/^	float target_y_;$/;"	m	class:ShotTypeExecuter	file:	access:private
ShotTypeExecuter::target_z_	src/shared_control/offboard_control_original.cpp	/^	float target_z_;$/;"	m	class:ShotTypeExecuter	file:	access:private
ShotTypeExecuter::target_z_	src/shared_control/trajectory_pub.cpp	/^	float target_z_;$/;"	m	class:ShotTypeExecuter	file:	access:private
ShotTypeExecuter::timer_	src/shared_control/offboard_control_original.cpp	/^	rclcpp::TimerBase::SharedPtr timer_;$/;"	m	class:ShotTypeExecuter	file:	access:private
ShotTypeExecuter::timer_	src/shared_control/trajectory_pub.cpp	/^	rclcpp::TimerBase::SharedPtr timer_;$/;"	m	class:ShotTypeExecuter	file:	access:private
ShotTypeExecuter::timestamp_	src/shared_control/offboard_control_original.cpp	/^	std::atomic<uint64_t> timestamp_;   \/\/!< common synced timestamped$/;"	m	class:ShotTypeExecuter	file:	access:private
ShotTypeExecuter::timesync_sub_	src/shared_control/offboard_control_original.cpp	/^	rclcpp::Subscription<px4_msgs::msg::Timesync>::SharedPtr timesync_sub_;$/;"	m	class:ShotTypeExecuter	file:	access:private
ShotTypeExecuter::vehicle_x_	src/shared_control/offboard_control_original.cpp	/^	float vehicle_x_, vehicle_xv_;$/;"	m	class:ShotTypeExecuter	file:	access:private
ShotTypeExecuter::vehicle_x_	src/shared_control/trajectory_pub.cpp	/^	float vehicle_x_, vehicle_xv_;$/;"	m	class:ShotTypeExecuter	file:	access:private
ShotTypeExecuter::vehicle_xv_	src/shared_control/offboard_control_original.cpp	/^	float vehicle_x_, vehicle_xv_;$/;"	m	class:ShotTypeExecuter	file:	access:private
ShotTypeExecuter::vehicle_xv_	src/shared_control/trajectory_pub.cpp	/^	float vehicle_x_, vehicle_xv_;$/;"	m	class:ShotTypeExecuter	file:	access:private
ShotTypeExecuter::vehicle_y_	src/shared_control/offboard_control_original.cpp	/^	float vehicle_y_, vehicle_yv_;$/;"	m	class:ShotTypeExecuter	file:	access:private
ShotTypeExecuter::vehicle_y_	src/shared_control/trajectory_pub.cpp	/^	float vehicle_y_, vehicle_yv_;$/;"	m	class:ShotTypeExecuter	file:	access:private
ShotTypeExecuter::vehicle_yv_	src/shared_control/offboard_control_original.cpp	/^	float vehicle_y_, vehicle_yv_;$/;"	m	class:ShotTypeExecuter	file:	access:private
ShotTypeExecuter::vehicle_yv_	src/shared_control/trajectory_pub.cpp	/^	float vehicle_y_, vehicle_yv_;$/;"	m	class:ShotTypeExecuter	file:	access:private
ShotTypeExecuter::vehicle_z_	src/shared_control/offboard_control_original.cpp	/^	float vehicle_z_, vehicle_zv_;$/;"	m	class:ShotTypeExecuter	file:	access:private
ShotTypeExecuter::vehicle_z_	src/shared_control/trajectory_pub.cpp	/^	float vehicle_z_, vehicle_zv_;$/;"	m	class:ShotTypeExecuter	file:	access:private
ShotTypeExecuter::vehicle_zv_	src/shared_control/offboard_control_original.cpp	/^	float vehicle_z_, vehicle_zv_;$/;"	m	class:ShotTypeExecuter	file:	access:private
ShotTypeExecuter::vehicle_zv_	src/shared_control/trajectory_pub.cpp	/^	float vehicle_z_, vehicle_zv_;$/;"	m	class:ShotTypeExecuter	file:	access:private
StaticTF	include/px4_ros_com/frame_transforms.h	/^enum class StaticTF {$/;"	c	namespace:px4_ros_com::frame_transforms
System	templates/microRTPS_transport.h	/^	enum class System {$/;"	c	namespace:MicroRtps
TEMPLATE_FILE	scripts/px_generate_uorb_topic_files.py	/^TEMPLATE_FILE = ['msg.h.em', 'msg.cpp.em']$/;"	v
TOPICS_LIST_TEMPLATE_FILE	scripts/px_generate_uorb_topic_files.py	/^TOPICS_LIST_TEMPLATE_FILE = ['uORBTopics.hpp.em', 'uORBTopics.cpp.em']$/;"	v
TOPICS_TOKEN	scripts/px_generate_uorb_topic_files.py	/^TOPICS_TOKEN = '# TOPICS '$/;"	v
TimeoutExpired	test/test_output.py	/^from subprocess import call, TimeoutExpired$/;"	i
TrajectoryGenerator	src/shared_control/trajectory_pub.cpp	/^	void TrajectoryGenerator();$/;"	p	class:ShotTypeExecuter	file:	access:private	signature:()
TrajectoryGenerator	src/shared_control/trajectory_pub.cpp	/^void ShotTypeExecuter::TrajectoryGenerator(){$/;"	f	class:ShotTypeExecuter	signature:()
Transport_node	templates/microRTPS_transport.cpp	/^Transport_node::Transport_node(const uint8_t sys_id, const bool debug):$/;"	f	class:Transport_node	signature:(const uint8_t sys_id, const bool debug)
Transport_node	templates/microRTPS_transport.h	/^	Transport_node(const uint8_t sys_id, const bool debug);$/;"	p	class:Transport_node	access:public	signature:(const uint8_t sys_id, const bool debug)
Transport_node	templates/microRTPS_transport.h	/^class Transport_node$/;"	c
Transport_node::Header	templates/microRTPS_transport.h	/^	struct __attribute__((packed)) Header {$/;"	s	class:Transport_node	access:private
Transport_node::Header::crc_h	templates/microRTPS_transport.h	/^		uint8_t crc_h;$/;"	m	struct:Transport_node::Header	access:public
Transport_node::Header::crc_l	templates/microRTPS_transport.h	/^		uint8_t crc_l;$/;"	m	struct:Transport_node::Header	access:public
Transport_node::Header::marker	templates/microRTPS_transport.h	/^		char marker[3];$/;"	m	struct:Transport_node::Header	access:public
Transport_node::Header::payload_len_h	templates/microRTPS_transport.h	/^		uint8_t payload_len_h;$/;"	m	struct:Transport_node::Header	access:public
Transport_node::Header::payload_len_l	templates/microRTPS_transport.h	/^		uint8_t payload_len_l;$/;"	m	struct:Transport_node::Header	access:public
Transport_node::Header::seq	templates/microRTPS_transport.h	/^		uint8_t seq;$/;"	m	struct:Transport_node::Header	access:public
Transport_node::Header::sys_id	templates/microRTPS_transport.h	/^		uint8_t sys_id;$/;"	m	struct:Transport_node::Header	access:public
Transport_node::Header::topic_id	templates/microRTPS_transport.h	/^		uint8_t topic_id;$/;"	m	struct:Transport_node::Header	access:public
Transport_node::Transport_node	templates/microRTPS_transport.cpp	/^Transport_node::Transport_node(const uint8_t sys_id, const bool debug):$/;"	f	class:Transport_node	signature:(const uint8_t sys_id, const bool debug)
Transport_node::Transport_node	templates/microRTPS_transport.h	/^	Transport_node(const uint8_t sys_id, const bool debug);$/;"	p	class:Transport_node	access:public	signature:(const uint8_t sys_id, const bool debug)
Transport_node::_debug	templates/microRTPS_transport.h	/^	bool _debug;$/;"	m	class:Transport_node	access:protected
Transport_node::_rx_buff_pos	templates/microRTPS_transport.h	/^	uint32_t _rx_buff_pos;$/;"	m	class:Transport_node	access:protected
Transport_node::_sys_id	templates/microRTPS_transport.h	/^	uint8_t _sys_id;$/;"	m	class:Transport_node	access:protected
Transport_node::close	templates/microRTPS_transport.h	/^	virtual uint8_t close() {return 0;}$/;"	f	class:Transport_node	access:public	signature:()
Transport_node::crc16	templates/microRTPS_transport.cpp	/^uint16_t Transport_node::crc16(uint8_t const *buffer, size_t len)$/;"	f	class:Transport_node	signature:(uint8_t const *buffer, size_t len)
Transport_node::crc16	templates/microRTPS_transport.h	/^	uint16_t crc16(uint8_t const *buffer, size_t len);$/;"	p	class:Transport_node	access:protected	signature:(uint8_t const *buffer, size_t len)
Transport_node::crc16_byte	templates/microRTPS_transport.cpp	/^uint16_t Transport_node::crc16_byte(uint16_t crc, const uint8_t data)$/;"	f	class:Transport_node	signature:(uint16_t crc, const uint8_t data)
Transport_node::crc16_byte	templates/microRTPS_transport.h	/^	uint16_t crc16_byte(uint16_t crc, const uint8_t data);$/;"	p	class:Transport_node	access:protected	signature:(uint16_t crc, const uint8_t data)
Transport_node::fds_OK	templates/microRTPS_transport.h	/^	virtual bool fds_OK() = 0;$/;"	p	class:Transport_node	access:protected	signature:()
Transport_node::get_header_length	templates/microRTPS_transport.cpp	/^size_t Transport_node::get_header_length()$/;"	f	class:Transport_node	signature:()
Transport_node::get_header_length	templates/microRTPS_transport.h	/^	size_t get_header_length();$/;"	p	class:Transport_node	access:public	signature:()
Transport_node::init	templates/microRTPS_transport.h	/^	virtual int init() {return 0;}$/;"	f	class:Transport_node	access:public	signature:()
Transport_node::node_read	templates/microRTPS_transport.h	/^	virtual ssize_t node_read(void *buffer, size_t len) = 0;$/;"	p	class:Transport_node	access:protected	signature:(void *buffer, size_t len)
Transport_node::node_write	templates/microRTPS_transport.h	/^	virtual ssize_t node_write(void *buffer, size_t len) = 0;$/;"	p	class:Transport_node	access:protected	signature:(void *buffer, size_t len)
Transport_node::read	templates/microRTPS_transport.cpp	/^ssize_t Transport_node::read(uint8_t *topic_id, char out_buffer[], size_t buffer_len)$/;"	f	class:Transport_node	signature:(uint8_t *topic_id, char out_buffer[], size_t buffer_len)
Transport_node::read	templates/microRTPS_transport.h	/^	ssize_t read(uint8_t *topic_id, char out_buffer[], size_t buffer_len);$/;"	p	class:Transport_node	access:public	signature:(uint8_t *topic_id, char out_buffer[], size_t buffer_len)
Transport_node::write	templates/microRTPS_transport.cpp	/^ssize_t Transport_node::write(const uint8_t topic_id, char buffer[], size_t length)$/;"	f	class:Transport_node	signature:(const uint8_t topic_id, char buffer[], size_t length)
Transport_node::write	templates/microRTPS_transport.h	/^	ssize_t write(const uint8_t topic_id, char buffer[], size_t length);$/;"	p	class:Transport_node	access:public	signature:(const uint8_t topic_id, char buffer[], size_t length)
Transport_node::~Transport_node	templates/microRTPS_transport.cpp	/^Transport_node::~Transport_node()$/;"	f	class:Transport_node	signature:()
Transport_node::~Transport_node	templates/microRTPS_transport.h	/^	virtual ~Transport_node();$/;"	p	class:Transport_node	access:public	signature:()
Tuple	scripts/uorb_rtps_classifier.py	/^from typing import Dict, List, Tuple$/;"	i
UART_node	templates/microRTPS_transport.cpp	/^UART_node::UART_node(const char *uart_name, const uint32_t baudrate,$/;"	f	class:UART_node	signature:(const char *uart_name, const uint32_t baudrate, const uint32_t poll_ms, const bool hw_flow_control, const bool sw_flow_control, const uint8_t sys_id, const bool debug)
UART_node	templates/microRTPS_transport.h	/^	UART_node(const char *uart_name, const uint32_t baudrate,$/;"	p	class:UART_node	access:public	signature:(const char *uart_name, const uint32_t baudrate, const uint32_t poll_ms, const bool hw_flow_control, const bool sw_flow_control, const uint8_t sys_id, const bool debug)
UART_node	templates/microRTPS_transport.h	/^class UART_node: public Transport_node$/;"	c	inherits:Transport_node
UART_node::UART_node	templates/microRTPS_transport.cpp	/^UART_node::UART_node(const char *uart_name, const uint32_t baudrate,$/;"	f	class:UART_node	signature:(const char *uart_name, const uint32_t baudrate, const uint32_t poll_ms, const bool hw_flow_control, const bool sw_flow_control, const uint8_t sys_id, const bool debug)
UART_node::UART_node	templates/microRTPS_transport.h	/^	UART_node(const char *uart_name, const uint32_t baudrate,$/;"	p	class:UART_node	access:public	signature:(const char *uart_name, const uint32_t baudrate, const uint32_t poll_ms, const bool hw_flow_control, const bool sw_flow_control, const uint8_t sys_id, const bool debug)
UART_node::_baudrate	templates/microRTPS_transport.h	/^	uint32_t _baudrate;$/;"	m	class:UART_node	access:protected
UART_node::_poll_fd	templates/microRTPS_transport.h	/^	struct pollfd _poll_fd[1]{};$/;"	s	class:UART_node	access:protected
UART_node::_poll_ms	templates/microRTPS_transport.h	/^	uint32_t _poll_ms;$/;"	m	class:UART_node	access:protected
UART_node::_uart_fd	templates/microRTPS_transport.h	/^	int _uart_fd;$/;"	m	class:UART_node	access:protected
UART_node::baudrate_to_speed	templates/microRTPS_transport.cpp	/^bool UART_node::baudrate_to_speed(uint32_t bauds, speed_t *speed)$/;"	f	class:UART_node	signature:(uint32_t bauds, speed_t *speed)
UART_node::baudrate_to_speed	templates/microRTPS_transport.h	/^	bool baudrate_to_speed(uint32_t bauds, speed_t *speed);$/;"	p	class:UART_node	access:protected	signature:(uint32_t bauds, speed_t *speed)
UART_node::close	templates/microRTPS_transport.cpp	/^uint8_t UART_node::close()$/;"	f	class:UART_node	signature:()
UART_node::close	templates/microRTPS_transport.h	/^	uint8_t close();$/;"	p	class:UART_node	access:public	signature:()
UART_node::fds_OK	templates/microRTPS_transport.cpp	/^bool UART_node::fds_OK()$/;"	f	class:UART_node	signature:()
UART_node::fds_OK	templates/microRTPS_transport.h	/^	bool fds_OK();$/;"	p	class:UART_node	access:protected	signature:()
UART_node::init	templates/microRTPS_transport.cpp	/^int UART_node::init()$/;"	f	class:UART_node	signature:()
UART_node::init	templates/microRTPS_transport.h	/^	int init();$/;"	p	class:UART_node	access:public	signature:()
UART_node::node_read	templates/microRTPS_transport.cpp	/^ssize_t UART_node::node_read(void *buffer, size_t len)$/;"	f	class:UART_node	signature:(void *buffer, size_t len)
UART_node::node_read	templates/microRTPS_transport.h	/^	ssize_t node_read(void *buffer, size_t len);$/;"	p	class:UART_node	access:protected	signature:(void *buffer, size_t len)
UART_node::node_write	templates/microRTPS_transport.cpp	/^ssize_t UART_node::node_write(void *buffer, size_t len)$/;"	f	class:UART_node	signature:(void *buffer, size_t len)
UART_node::node_write	templates/microRTPS_transport.h	/^	ssize_t node_write(void *buffer, size_t len);$/;"	p	class:UART_node	access:protected	signature:(void *buffer, size_t len)
UART_node::~UART_node	templates/microRTPS_transport.cpp	/^UART_node::~UART_node()$/;"	f	class:UART_node	signature:()
UART_node::~UART_node	templates/microRTPS_transport.h	/^	virtual ~UART_node();$/;"	p	class:UART_node	access:public	signature:()
UDP_node	templates/microRTPS_transport.cpp	/^UDP_node::UDP_node(const char *udp_ip, uint16_t udp_port_recv,$/;"	f	class:UDP_node	signature:(const char *udp_ip, uint16_t udp_port_recv, uint16_t udp_port_send, const uint8_t sys_id, const bool debug)
UDP_node	templates/microRTPS_transport.h	/^	UDP_node(const char *udp_ip, uint16_t udp_port_recv, uint16_t udp_port_send,$/;"	p	class:UDP_node	access:public	signature:(const char *udp_ip, uint16_t udp_port_recv, uint16_t udp_port_send, const uint8_t sys_id, const bool debug)
UDP_node	templates/microRTPS_transport.h	/^class UDP_node: public Transport_node$/;"	c	inherits:Transport_node
UDP_node::UDP_node	templates/microRTPS_transport.cpp	/^UDP_node::UDP_node(const char *udp_ip, uint16_t udp_port_recv,$/;"	f	class:UDP_node	signature:(const char *udp_ip, uint16_t udp_port_recv, uint16_t udp_port_send, const uint8_t sys_id, const bool debug)
UDP_node::UDP_node	templates/microRTPS_transport.h	/^	UDP_node(const char *udp_ip, uint16_t udp_port_recv, uint16_t udp_port_send,$/;"	p	class:UDP_node	access:public	signature:(const char *udp_ip, uint16_t udp_port_recv, uint16_t udp_port_send, const uint8_t sys_id, const bool debug)
UDP_node::_receiver_fd	templates/microRTPS_transport.h	/^	int _receiver_fd;$/;"	m	class:UDP_node	access:protected
UDP_node::_receiver_inaddr	templates/microRTPS_transport.h	/^	struct sockaddr_in _receiver_inaddr;$/;"	m	class:UDP_node	typeref:struct:UDP_node::sockaddr_in	access:protected
UDP_node::_receiver_outaddr	templates/microRTPS_transport.h	/^	struct sockaddr_in _receiver_outaddr;$/;"	m	class:UDP_node	typeref:struct:UDP_node::sockaddr_in	access:protected
UDP_node::_sender_fd	templates/microRTPS_transport.h	/^	int _sender_fd;$/;"	m	class:UDP_node	access:protected
UDP_node::_sender_outaddr	templates/microRTPS_transport.h	/^	struct sockaddr_in _sender_outaddr;$/;"	m	class:UDP_node	typeref:struct:UDP_node::sockaddr_in	access:protected
UDP_node::_udp_port_recv	templates/microRTPS_transport.h	/^	uint16_t _udp_port_recv;$/;"	m	class:UDP_node	access:protected
UDP_node::_udp_port_send	templates/microRTPS_transport.h	/^	uint16_t _udp_port_send;$/;"	m	class:UDP_node	access:protected
UDP_node::close	templates/microRTPS_transport.cpp	/^uint8_t UDP_node::close()$/;"	f	class:UDP_node	signature:()
UDP_node::close	templates/microRTPS_transport.h	/^	uint8_t close();$/;"	p	class:UDP_node	access:public	signature:()
UDP_node::fds_OK	templates/microRTPS_transport.cpp	/^bool UDP_node::fds_OK()$/;"	f	class:UDP_node	signature:()
UDP_node::fds_OK	templates/microRTPS_transport.h	/^	bool fds_OK();$/;"	p	class:UDP_node	access:protected	signature:()
UDP_node::init	templates/microRTPS_transport.cpp	/^int UDP_node::init()$/;"	f	class:UDP_node	signature:()
UDP_node::init	templates/microRTPS_transport.h	/^	int init();$/;"	p	class:UDP_node	access:public	signature:()
UDP_node::init_receiver	templates/microRTPS_transport.cpp	/^int UDP_node::init_receiver(uint16_t udp_port)$/;"	f	class:UDP_node	signature:(uint16_t udp_port)
UDP_node::init_receiver	templates/microRTPS_transport.h	/^	int init_receiver(uint16_t udp_port);$/;"	p	class:UDP_node	access:protected	signature:(uint16_t udp_port)
UDP_node::init_sender	templates/microRTPS_transport.cpp	/^int UDP_node::init_sender(uint16_t udp_port)$/;"	f	class:UDP_node	signature:(uint16_t udp_port)
UDP_node::init_sender	templates/microRTPS_transport.h	/^	int init_sender(uint16_t udp_port);$/;"	p	class:UDP_node	access:protected	signature:(uint16_t udp_port)
UDP_node::node_read	templates/microRTPS_transport.cpp	/^ssize_t UDP_node::node_read(void *buffer, size_t len)$/;"	f	class:UDP_node	signature:(void *buffer, size_t len)
UDP_node::node_read	templates/microRTPS_transport.h	/^	ssize_t node_read(void *buffer, size_t len);$/;"	p	class:UDP_node	access:protected	signature:(void *buffer, size_t len)
UDP_node::node_write	templates/microRTPS_transport.cpp	/^ssize_t UDP_node::node_write(void *buffer, size_t len)$/;"	f	class:UDP_node	signature:(void *buffer, size_t len)
UDP_node::node_write	templates/microRTPS_transport.h	/^	ssize_t node_write(void *buffer, size_t len);$/;"	p	class:UDP_node	access:protected	signature:(void *buffer, size_t len)
UDP_node::~UDP_node	templates/microRTPS_transport.cpp	/^UDP_node::~UDP_node()$/;"	f	class:UDP_node	signature:()
UDP_node::~UDP_node	templates/microRTPS_transport.h	/^	virtual ~UDP_node();$/;"	p	class:UDP_node	access:public	signature:()
VehicleGpsPositionListener	src/examples/listeners/vehicle_gps_position_listener.cpp	/^	explicit VehicleGpsPositionListener() : Node("vehicle_global_position_listener") {$/;"	f	class:VehicleGpsPositionListener	access:public	signature:()
VehicleGpsPositionListener	src/examples/listeners/vehicle_gps_position_listener.cpp	/^class VehicleGpsPositionListener : public rclcpp::Node$/;"	c	file:	inherits:rclcpp::Node
VehicleGpsPositionListener::VehicleGpsPositionListener	src/examples/listeners/vehicle_gps_position_listener.cpp	/^	explicit VehicleGpsPositionListener() : Node("vehicle_global_position_listener") {$/;"	f	class:VehicleGpsPositionListener	access:public	signature:()
VehicleGpsPositionListener::subscription_	src/examples/listeners/vehicle_gps_position_listener.cpp	/^	rclcpp::Subscription<px4_msgs::msg::VehicleGpsPosition>::SharedPtr subscription_;$/;"	m	class:VehicleGpsPositionListener	file:	access:private
__author__	scripts/px_generate_uorb_topic_files.py	/^__author__ = "Sergey Belash, Thomas Gubler, Beat Kueng"$/;"	v
__copyright__	scripts/px_generate_uorb_topic_files.py	/^__copyright__ = "Copyright (C) 2013-2016 PX4 Development Team."$/;"	v
__email__	scripts/px_generate_uorb_topic_files.py	/^__email__ = "thomasgubler@gmail.com"$/;"	v
__init__	scripts/uorb_rtps_classifier.py	/^    def __init__(self, yaml_file, msg_folder) -> None:$/;"	m	class:Classifier	access:public
__init__.py	scripts/__init__.py	1;"	F
__init__.py	test/__init__.py	1;"	F
__license__	scripts/px_generate_uorb_topic_files.py	/^__license__ = "BSD"$/;"	v
_baudrate	templates/microRTPS_transport.h	/^	uint32_t _baudrate;$/;"	m	class:UART_node	access:protected
_continue	scripts/generate_microRTPS_bridge.py	/^        _continue = str(input("\\nFiles in " + agent_out_dir +$/;"	v
_continue	scripts/generate_microRTPS_bridge.py	/^        _continue = str(input($/;"	v
_debug	templates/microRTPS_transport.h	/^	bool _debug;$/;"	m	class:Transport_node	access:protected
_poll_fd	templates/microRTPS_transport.h	/^	struct pollfd _poll_fd[1]{};$/;"	s	class:UART_node	access:protected
_poll_ms	templates/microRTPS_transport.h	/^	uint32_t _poll_ms;$/;"	m	class:UART_node	access:protected
_receiver_fd	templates/microRTPS_transport.h	/^	int _receiver_fd;$/;"	m	class:UDP_node	access:protected
_receiver_inaddr	templates/microRTPS_transport.h	/^	struct sockaddr_in _receiver_inaddr;$/;"	m	class:UDP_node	typeref:struct:UDP_node::sockaddr_in	access:protected
_receiver_outaddr	templates/microRTPS_transport.h	/^	struct sockaddr_in _receiver_outaddr;$/;"	m	class:UDP_node	typeref:struct:UDP_node::sockaddr_in	access:protected
_rx_buff_pos	templates/microRTPS_transport.h	/^	uint32_t _rx_buff_pos;$/;"	m	class:Transport_node	access:protected
_sender_fd	templates/microRTPS_transport.h	/^	int _sender_fd;$/;"	m	class:UDP_node	access:protected
_sender_outaddr	templates/microRTPS_transport.h	/^	struct sockaddr_in _sender_outaddr;$/;"	m	class:UDP_node	typeref:struct:UDP_node::sockaddr_in	access:protected
_sys_id	templates/microRTPS_transport.h	/^	uint8_t _sys_id;$/;"	m	class:Transport_node	access:protected
_uart_fd	templates/microRTPS_transport.h	/^	int _uart_fd;$/;"	m	class:UART_node	access:protected
_udp_port_recv	templates/microRTPS_transport.h	/^	uint16_t _udp_port_recv;$/;"	m	class:UDP_node	access:protected
_udp_port_send	templates/microRTPS_transport.h	/^	uint16_t _udp_port_send;$/;"	m	class:UDP_node	access:protected
actions	launch/sensor_combined_listener.launch.py	/^import launch_ros.actions$/;"	i
add_padding_bytes	scripts/px_generate_uorb_topic_helper.py	/^def add_padding_bytes(fields, search_path):$/;"	f	access:public
advertiser	test/pipeline_io_test.py	/^    advertiser = args.publisher_topic$/;"	v
agent	scripts/generate_microRTPS_bridge.py	/^    agent = True$/;"	v
agent	scripts/generate_microRTPS_bridge.py	/^agent = args.agent$/;"	v
agent_out_dir	scripts/generate_microRTPS_bridge.py	/^agent_out_dir = os.path.abspath(args.agentdir)$/;"	v
aircraft_to_baselink_body_frame	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T aircraft_to_baselink_body_frame(const T &in)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in)
aircraft_to_baselink_orientation	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T aircraft_to_baselink_orientation(const T &in)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in)
aircraft_to_enu_frame	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T aircraft_to_enu_frame(const T &in, const Eigen::Quaterniond &q)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in, const Eigen::Quaterniond &q)
aircraft_to_ned_frame	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T aircraft_to_ned_frame(const T &in, const Eigen::Quaterniond &q)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in, const Eigen::Quaterniond &q)
append_to_include_path	scripts/px_generate_uorb_topic_files.py	/^def append_to_include_path(path_to_append, curr_include, package):$/;"	f	access:public
argparse	scripts/generate_microRTPS_bridge.py	/^import argparse$/;"	i
argparse	scripts/px_generate_uorb_topic_files.py	/^import argparse$/;"	i
argparse	scripts/uorb_rtps_classifier.py	/^import argparse$/;"	i
argparse	test/pipeline_io_test.py	/^import argparse$/;"	i
argparse	test/test_input.py	/^import argparse$/;"	i
argparse	test/test_output.py	/^import argparse$/;"	i
args	scripts/generate_microRTPS_bridge.py	/^args = parser.parse_args()$/;"	v
args	scripts/uorb_rtps_classifier.py	/^    args = parser.parse_args()$/;"	v
args	test/pipeline_io_test.py	/^    args = parser.parse_args()$/;"	v
args	test/test_input.py	/^    args = parser.parse_args()$/;"	v
args	test/test_output.py	/^    args = parser.parse_args()$/;"	v
arm	src/examples/offboard/offboard_control.cpp	/^	void arm() const;$/;"	p	class:OffboardControl	file:	access:public	signature:() const
arm	src/examples/offboard/offboard_control.cpp	/^void OffboardControl::arm() const {$/;"	f	class:OffboardControl	signature:() const
arm	src/examples/offboard/offboard_control_original.cpp	/^	void arm() const;$/;"	p	class:OffboardControl	file:	access:public	signature:() const
arm	src/examples/offboard/offboard_control_original.cpp	/^void OffboardControl::arm() const {$/;"	f	class:OffboardControl	signature:() const
arm	src/shared_control/offboard_control_original.cpp	/^void OffboardControl::arm() const {$/;"	f	class:OffboardControl	signature:() const
array_to_eigen_quat	include/px4_ros_com/frame_transforms.h	/^Eigen::Quaterniond array_to_eigen_quat(const std::array<float, 4> &q);$/;"	p	namespace:px4_ros_com::frame_transforms::utils::quaternion	signature:(const std::array<float, 4> &q)
array_to_eigen_quat	src/lib/frame_transforms.cpp	/^Eigen::Quaterniond array_to_eigen_quat(const std::array<float, 4> &q)$/;"	f	namespace:px4_ros_com::frame_transforms::utils::quaternion	signature:(const std::array<float, 4> &q)
array_urt_to_covariance_matrix	include/px4_ros_com/frame_transforms.h	/^void array_urt_to_covariance_matrix(const std::array<float, ARR_SIZE> &covmsg, T &covmat);$/;"	p	namespace:px4_ros_com::frame_transforms::utils::types	signature:(const std::array<float, ARR_SIZE> &covmsg, T &covmat)
array_urt_to_covariance_matrix	src/lib/frame_transforms.cpp	/^void array_urt_to_covariance_matrix(const std::array<float, ARR_SIZE> &covmsg, T &covmat)$/;"	f	namespace:px4_ros_com::frame_transforms::utils::types	signature:(const std::array<float, ARR_SIZE> &covmsg, T &covmat)
bare_name	scripts/px_generate_uorb_topic_helper.py	/^def bare_name(msg_type):$/;"	f	access:public
baselink_to_aircraft_body_frame	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T baselink_to_aircraft_body_frame(const T &in)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in)
baselink_to_aircraft_orientation	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T baselink_to_aircraft_orientation(const T &in)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in)
baselink_to_enu_frame	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T baselink_to_enu_frame(const T &in, const Eigen::Quaterniond &q)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in, const Eigen::Quaterniond &q)
baudrate_to_speed	templates/microRTPS_transport.cpp	/^bool UART_node::baudrate_to_speed(uint32_t bauds, speed_t *speed)$/;"	f	class:UART_node	signature:(uint32_t bauds, speed_t *speed)
baudrate_to_speed	templates/microRTPS_transport.h	/^	bool baudrate_to_speed(uint32_t bauds, speed_t *speed);$/;"	p	class:UART_node	access:protected	signature:(uint32_t bauds, speed_t *speed)
build_all.bash	scripts/build_all.bash	1;"	F
build_ros1_bridge.bash	scripts/build_ros1_bridge.bash	1;"	F
build_ros2_workspace.bash	scripts/build_ros2_workspace.bash	1;"	F
call	test/pipeline_io_test.py	/^from subprocess import call, CalledProcessError, check_output, DEVNULL, Popen, STDOUT$/;"	i
call	test/test_input.py	/^from subprocess import call, check_output, DEVNULL$/;"	i
call	test/test_output.py	/^from subprocess import call, TimeoutExpired$/;"	i
candidate	scripts/generate_microRTPS_bridge.py	/^        candidate = os.path.join(dirname, 'fastrtpsgen')$/;"	v
check_base_type	scripts/uorb_rtps_classifier.py	/^    def check_base_type(self) -> None:$/;"	m	class:Classifier	access:public
check_output	test/pipeline_io_test.py	/^from subprocess import call, CalledProcessError, check_output, DEVNULL, Popen, STDOUT$/;"	i
check_output	test/test_input.py	/^from subprocess import call, check_output, DEVNULL$/;"	i
classifier	scripts/generate_microRTPS_bridge.py	/^classifier = (Classifier(os.path.abspath(args.yaml_file), msg_dir) if os.path.isabs(args.yaml_file)$/;"	v
classifier	scripts/uorb_rtps_classifier.py	/^    classifier = (Classifier(os.path.abspath(args.yaml_file), msg_dir) if os.path.isabs(args.yaml_file)$/;"	v
clean_all.bash	scripts/clean_all.bash	1;"	F
client	scripts/generate_microRTPS_bridge.py	/^    client = True$/;"	v
client	scripts/generate_microRTPS_bridge.py	/^client = args.client$/;"	v
client_out_dir	scripts/generate_microRTPS_bridge.py	/^client_out_dir = os.path.abspath(args.clientdir)$/;"	v
close	templates/microRTPS_transport.cpp	/^uint8_t UART_node::close()$/;"	f	class:UART_node	signature:()
close	templates/microRTPS_transport.cpp	/^uint8_t UDP_node::close()$/;"	f	class:UDP_node	signature:()
close	templates/microRTPS_transport.h	/^	uint8_t close();$/;"	p	class:UART_node	access:public	signature:()
close	templates/microRTPS_transport.h	/^	uint8_t close();$/;"	p	class:UDP_node	access:public	signature:()
close	templates/microRTPS_transport.h	/^	virtual uint8_t close() {return 0;}$/;"	f	class:Transport_node	access:public	signature:()
cmakelists	scripts/generate_microRTPS_bridge.py	/^cmakelists = args.cmakelists$/;"	v
convert_dir	scripts/px_generate_uorb_topic_files.py	/^def convert_dir(format_idx, inputdir, outputdir, package, templatedir):$/;"	f	access:public
convert_dir_save	scripts/px_generate_uorb_topic_files.py	/^def convert_dir_save(format_idx, inputdir, outputdir, package, templatedir, temporarydir, prefix, quiet=False):$/;"	f	access:public
convert_type	scripts/px_generate_uorb_topic_helper.py	/^def convert_type(spec_type, use_short_type=False):$/;"	f	access:public
copy_changed	scripts/px_generate_uorb_topic_files.py	/^def copy_changed(inputdir, outputdir, prefix='', quiet=False):$/;"	f	access:public
count	src/shared_control/sensor_combined.cpp	/^	int count = 0;$/;"	m	class:SensorFusion	file:	access:private
covariance_to_array	include/px4_ros_com/frame_transforms.h	/^template <class T, std::size_t SIZE> void covariance_to_array(const T &cov, std::array<float, SIZE> &covmsg);$/;"	p	namespace:px4_ros_com::frame_transforms::utils::types	signature:(const T &cov, std::array<float, SIZE> &covmsg)
covariance_to_array	src/lib/frame_transforms.cpp	/^template <class T, std::size_t SIZE> void covariance_to_array(const T &cov, std::array<float, SIZE> &covmsg)$/;"	f	namespace:px4_ros_com::frame_transforms::utils::types	signature:(const T &cov, std::array<float, SIZE> &covmsg)
covariance_urt_to_array	include/px4_ros_com/frame_transforms.h	/^void covariance_urt_to_array(const T &covmap, std::array<float, ARR_SIZE> &covmsg);$/;"	p	namespace:px4_ros_com::frame_transforms::utils::types	signature:(const T &covmap, std::array<float, ARR_SIZE> &covmsg)
covariance_urt_to_array	src/lib/frame_transforms.cpp	/^void covariance_urt_to_array(const T &covmap, std::array<float, ARR_SIZE> &covmsg)$/;"	f	namespace:px4_ros_com::frame_transforms::utils::types	signature:(const T &covmap, std::array<float, ARR_SIZE> &covmsg)
cp_wildcard	scripts/generate_microRTPS_bridge.py	/^def cp_wildcard(pattern, destdir):$/;"	f	access:public
crc16	templates/microRTPS_transport.cpp	/^uint16_t Transport_node::crc16(uint8_t const *buffer, size_t len)$/;"	f	class:Transport_node	signature:(uint8_t const *buffer, size_t len)
crc16	templates/microRTPS_transport.h	/^	uint16_t crc16(uint8_t const *buffer, size_t len);$/;"	p	class:Transport_node	access:protected	signature:(uint8_t const *buffer, size_t len)
crc16_byte	templates/microRTPS_transport.cpp	/^uint16_t Transport_node::crc16_byte(uint16_t crc, const uint8_t data)$/;"	f	class:Transport_node	signature:(uint16_t crc, const uint8_t data)
crc16_byte	templates/microRTPS_transport.h	/^	uint16_t crc16_byte(uint16_t crc, const uint8_t data);$/;"	p	class:Transport_node	access:protected	signature:(uint16_t crc, const uint8_t data)
crc16_table	templates/microRTPS_transport.cpp	/^uint16_t const crc16_table[256] = {$/;"	v
crc_h	templates/microRTPS_transport.h	/^		uint8_t crc_h;$/;"	m	struct:Transport_node::Header	access:public
crc_l	templates/microRTPS_transport.h	/^		uint8_t crc_l;$/;"	m	struct:Transport_node::Header	access:public
debug_vect_advertiser.cpp	src/examples/advertisers/debug_vect_advertiser.cpp	1;"	F
default_agent_out	scripts/generate_microRTPS_bridge.py	/^default_agent_out = "src\/modules\/micrortps_bridge\/micrortps_agent"$/;"	v
default_client_out	scripts/generate_microRTPS_bridge.py	/^default_client_out = "src\/modules\/micrortps_bridge\/micrortps_client"$/;"	v
default_package_name	scripts/generate_microRTPS_bridge.py	/^default_package_name = px_generate_uorb_topic_files.PACKAGE$/;"	v
default_publisher_topic	test/pipeline_io_test.py	/^    default_publisher_topic = "debug_vect"$/;"	v
default_px4_dir	test/pipeline_io_test.py	/^    default_px4_dir = os.path.expanduser("~") + "\/PX4\/Firmware"$/;"	v
default_px4_ros_com_install_dir	test/pipeline_io_test.py	/^    default_px4_ros_com_install_dir = os.path.expanduser("~") + "\/PX4\/px4_ros2_ws\/install"$/;"	v
default_px4_target	test/pipeline_io_test.py	/^    default_px4_target = "iris_rtps"$/;"	v
default_subscriber_topic	test/pipeline_io_test.py	/^    default_subscriber_topic = "sensor_combined"$/;"	v
default_test_dir	test/pipeline_io_test.py	/^    default_test_dir = os.path.dirname(os.path.realpath(__file__))$/;"	v
default_test_type	test/pipeline_io_test.py	/^    default_test_type = "fcu_output"$/;"	v
default_uorb_templates_dir	scripts/generate_microRTPS_bridge.py	/^default_uorb_templates_dir = "templates\/uorb_microcdr"$/;"	v
default_urtps_templates_dir	scripts/generate_microRTPS_bridge.py	/^default_urtps_templates_dir = "templates\/urtps"$/;"	v
default_urtps_topics_file	scripts/generate_microRTPS_bridge.py	/^default_urtps_topics_file = "tools\/urtps_bridge_topics.yaml"$/;"	v
del_tree	scripts/generate_microRTPS_bridge.py	/^del_tree = args.del_tree$/;"	v
difflib	scripts/uorb_rtps_classifier.py	/^import difflib$/;"	i
disarm	src/examples/offboard/offboard_control.cpp	/^	void disarm() const;$/;"	p	class:OffboardControl	file:	access:public	signature:() const
disarm	src/examples/offboard/offboard_control.cpp	/^void OffboardControl::disarm() const {$/;"	f	class:OffboardControl	signature:() const
disarm	src/examples/offboard/offboard_control_original.cpp	/^	void disarm() const;$/;"	p	class:OffboardControl	file:	access:public	signature:() const
disarm	src/examples/offboard/offboard_control_original.cpp	/^void OffboardControl::disarm() const {$/;"	f	class:OffboardControl	signature:() const
disarm	src/shared_control/offboard_control_original.cpp	/^void OffboardControl::disarm() const {$/;"	f	class:OffboardControl	signature:() const
ecef_to_enu_local_frame	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T ecef_to_enu_local_frame(const T &in, const T &map_origin)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in, const T &map_origin)
eigen_quat_to_array	include/px4_ros_com/frame_transforms.h	/^void eigen_quat_to_array(const Eigen::Quaterniond &q, std::array<float, 4> &qarray);$/;"	p	namespace:px4_ros_com::frame_transforms::utils::quaternion	signature:(const Eigen::Quaterniond &q, std::array<float, 4> &qarray)
eigen_quat_to_array	src/lib/frame_transforms.cpp	/^void eigen_quat_to_array(const Eigen::Quaterniond &q, std::array<float, 4> &qarray)$/;"	f	namespace:px4_ros_com::frame_transforms::utils::quaternion	signature:(const Eigen::Quaterniond &q, std::array<float, 4> &qarray)
em	scripts/px_generate_uorb_topic_files.py	/^    import em$/;"	i
em	scripts/px_generate_uorb_topic_files.py	/^    print("Failed to import em: " + str(e))$/;"	i
enu_to_aircraft_frame	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T enu_to_aircraft_frame(const T &in, const Eigen::Quaterniond &q)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in, const Eigen::Quaterniond &q)
enu_to_baselink_frame	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T enu_to_baselink_frame(const T &in, const Eigen::Quaterniond &q)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in, const Eigen::Quaterniond &q)
enu_to_ecef_local_frame	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T enu_to_ecef_local_frame(const T &in, const T &map_origin)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in, const T &map_origin)
enu_to_ned_local_frame	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T enu_to_ned_local_frame(const T &in)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in)
enu_to_ned_orientation	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T enu_to_ned_orientation(const T &in)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in)
errno	scripts/generate_microRTPS_bridge.py	/^import errno$/;"	i
errno	scripts/px_generate_uorb_topic_helper.py	/^import errno$/;"	i
errno	scripts/uorb_rtps_classifier.py	/^import errno$/;"	i
exit	test/pipeline_io_test.py	/^from sys import exit$/;"	i
exit	test/test_input.py	/^from sys import exit$/;"	i
exit	test/test_output.py	/^from sys import exit$/;"	i
fastrtps_version	scripts/generate_microRTPS_bridge.py	/^    fastrtps_version = re.search(r'Version:\\s*([\\dd.]+)', subprocess.check_output($/;"	v
fastrtps_version	scripts/generate_microRTPS_bridge.py	/^    fastrtps_version = subprocess.check_output($/;"	v
fastrtps_version	scripts/generate_microRTPS_bridge.py	/^fastrtps_version = ''$/;"	v
fastrtpsgen_include	scripts/generate_microRTPS_bridge.py	/^        os.path.abspath($/;"	v
fastrtpsgen_include	scripts/generate_microRTPS_bridge.py	/^fastrtpsgen_include = args.fastrtpsgen_include$/;"	v
fastrtpsgen_path	scripts/generate_microRTPS_bridge.py	/^            fastrtpsgen_path = candidate$/;"	v
fastrtpsgen_path	scripts/generate_microRTPS_bridge.py	/^        fastrtpsgen_path = args.fastrtpsgen$/;"	v
fastrtpsgen_path	scripts/generate_microRTPS_bridge.py	/^        fastrtpsgen_path = os.path.join($/;"	v
fastrtpsgen_path	scripts/generate_microRTPS_bridge.py	/^    fastrtpsgen_path = 'fastrtpsgen'$/;"	v
fastrtpsgen_version	scripts/generate_microRTPS_bridge.py	/^        fastrtpsgen_version = version.parse(fastrtpsgen_version_out)$/;"	v
fastrtpsgen_version	scripts/generate_microRTPS_bridge.py	/^fastrtpsgen_version = version.Version("1.0.0")$/;"	v
fastrtpsgen_version_out	scripts/generate_microRTPS_bridge.py	/^        fastrtpsgen_version_out = subprocess.check_output($/;"	v
fds_OK	templates/microRTPS_transport.cpp	/^bool UART_node::fds_OK()$/;"	f	class:UART_node	signature:()
fds_OK	templates/microRTPS_transport.cpp	/^bool UDP_node::fds_OK()$/;"	f	class:UDP_node	signature:()
fds_OK	templates/microRTPS_transport.h	/^	bool fds_OK();$/;"	p	class:UART_node	access:protected	signature:()
fds_OK	templates/microRTPS_transport.h	/^	bool fds_OK();$/;"	p	class:UDP_node	access:protected	signature:()
fds_OK	templates/microRTPS_transport.h	/^	virtual bool fds_OK() = 0;$/;"	p	class:Transport_node	access:protected	signature:()
filecmp	scripts/px_generate_uorb_topic_files.py	/^import filecmp$/;"	i
frame_transforms	include/px4_ros_com/frame_transforms.h	/^namespace frame_transforms$/;"	n	namespace:px4_ros_com
frame_transforms	src/lib/frame_transforms.cpp	/^namespace frame_transforms$/;"	n	namespace:px4_ros_com	file:
frame_transforms.cpp	src/lib/frame_transforms.cpp	1;"	F
frame_transforms.h	include/px4_ros_com/frame_transforms.h	1;"	F
gen_idl	scripts/generate_microRTPS_bridge.py	/^gen_idl = args.gen_idl$/;"	v
generate_agent	scripts/generate_microRTPS_bridge.py	/^def generate_agent(out_dir):$/;"	f	access:public
generate_by_template	scripts/px_generate_uorb_topic_files.py	/^def generate_by_template(output_file, template_file, em_globals):$/;"	f	access:public
generate_client	scripts/generate_microRTPS_bridge.py	/^def generate_client(out_dir):$/;"	f	access:public
generate_idl_file	scripts/px_generate_uorb_topic_files.py	/^def generate_idl_file(filename_msg, msg_dir, alias, outputdir, templatedir, package, includepath, fastrtps_version, ros2_distro, msgs):$/;"	f	access:public
generate_launch_description	launch/px4_launch.py	/^def generate_launch_description():$/;"	f	access:public
generate_launch_description	launch/sensor_combined_listener.launch.py	/^def generate_launch_description():$/;"	f	access:public
generate_microRTPS_bridge.py	scripts/generate_microRTPS_bridge.py	1;"	F
generate_output_from_file	scripts/px_generate_uorb_topic_files.py	/^def generate_output_from_file(format_idx, filename, outputdir, package, templatedir, includepath):$/;"	f	access:public
generate_topic_file	scripts/px_generate_uorb_topic_files.py	/^def generate_topic_file(filename_msg, msg_dir, alias, outputdir, templatedir, package, includepath, msgs, fastrtps_version, ros2_distro, template_name):$/;"	f	access:public
generate_topics_list_file	scripts/px_generate_uorb_topic_files.py	/^def generate_topics_list_file(msgdir, outputdir, template_filename, templatedir):$/;"	f	access:public
generate_topics_list_file_from_files	scripts/px_generate_uorb_topic_files.py	/^def generate_topics_list_file_from_files(files, outputdir, template_filename, templatedir):$/;"	f	access:public
generate_uRTPS_general	scripts/px_generate_uorb_topic_files.py	/^def generate_uRTPS_general(filename_send_msgs, filename_alias_send_msgs, filename_receive_msgs, filename_alias_receive_msgs,$/;"	f	access:public
genmsg	scripts/px_generate_uorb_topic_files.py	/^    import genmsg.template_tools$/;"	i
genmsg	scripts/px_generate_uorb_topic_files.py	/^    print("Failed to import genmsg: " + str(e))$/;"	i
genmsg	scripts/px_generate_uorb_topic_helper.py	/^import genmsg.msgs$/;"	i
get_children_fields	scripts/px_generate_uorb_topic_helper.py	/^def get_children_fields(base_type, search_path):$/;"	f	access:public
get_em_globals	scripts/px_generate_uorb_topic_files.py	/^def get_em_globals(filename_msg, alias, package, includepath, msgs, fastrtps_version, ros2_distro, scope):$/;"	f	access:public
get_header_length	templates/microRTPS_transport.cpp	/^size_t Transport_node::get_header_length()$/;"	f	class:Transport_node	signature:()
get_header_length	templates/microRTPS_transport.h	/^	size_t get_header_length();$/;"	p	class:Transport_node	access:public	signature:()
get_msgs_list	scripts/px_generate_uorb_topic_files.py	/^def get_msgs_list(msgdir):$/;"	f	access:public
get_package_share_directory	launch/px4_launch.py	/^from ament_index_python.packages import get_package_share_directory$/;"	i
get_topics	scripts/px_generate_uorb_topic_files.py	/^def get_topics(filename, msg_name):$/;"	f	access:public
gimbal_x	src/shared_control/sensor_combined.cpp	/^	float gimbal_x;$/;"	m	class:SensorFusion	file:	access:private
gimbal_y	src/shared_control/sensor_combined.cpp	/^	float gimbal_y;$/;"	m	class:SensorFusion	file:	access:private
gimbal_z	src/shared_control/sensor_combined.cpp	/^	float gimbal_z;$/;"	m	class:SensorFusion	file:	access:private
glob	scripts/generate_microRTPS_bridge.py	/^import glob$/;"	i
help	scripts/generate_microRTPS_bridge.py	/^                    help="Flag for generate the agent, by default is true if -c is not specified")$/;"	v
help	scripts/generate_microRTPS_bridge.py	/^                    help="Flag for generate the client, by default is true if -a is not specified")$/;"	v
help	scripts/generate_microRTPS_bridge.py	/^                    help="directory(ies) to add to preprocessor include paths of fastrtpsgen, by default empty", default="")$/;"	v
idl_dir	scripts/generate_microRTPS_bridge.py	/^    idl_dir = os.path.abspath(args.idl_dir)$/;"	v
idl_dir	scripts/generate_microRTPS_bridge.py	/^    idl_dir = os.path.join(agent_out_dir, "idl")$/;"	v
idl_dir	scripts/generate_microRTPS_bridge.py	/^idl_dir = args.idl_dir$/;"	v
init	templates/microRTPS_transport.cpp	/^int UART_node::init()$/;"	f	class:UART_node	signature:()
init	templates/microRTPS_transport.cpp	/^int UDP_node::init()$/;"	f	class:UDP_node	signature:()
init	templates/microRTPS_transport.h	/^	int init();$/;"	p	class:UART_node	access:public	signature:()
init	templates/microRTPS_transport.h	/^	int init();$/;"	p	class:UDP_node	access:public	signature:()
init	templates/microRTPS_transport.h	/^	virtual int init() {return 0;}$/;"	f	class:Transport_node	access:public	signature:()
init_receiver	templates/microRTPS_transport.cpp	/^int UDP_node::init_receiver(uint16_t udp_port)$/;"	f	class:UDP_node	signature:(uint16_t udp_port)
init_receiver	templates/microRTPS_transport.h	/^	int init_receiver(uint16_t udp_port);$/;"	p	class:UDP_node	access:protected	signature:(uint16_t udp_port)
init_sender	templates/microRTPS_transport.cpp	/^int UDP_node::init_sender(uint16_t udp_port)$/;"	f	class:UDP_node	signature:(uint16_t udp_port)
init_sender	templates/microRTPS_transport.h	/^	int init_sender(uint16_t udp_port);$/;"	p	class:UDP_node	access:protected	signature:(uint16_t udp_port)
input	scripts/generate_microRTPS_bridge.py	/^    from six.moves import input$/;"	i
launch_ros	launch/sensor_combined_listener.launch.py	/^import launch_ros.actions$/;"	i
listener	test/pipeline_io_test.py	/^    listener = args.subscriber_topic$/;"	v
main	src/examples/advertisers/debug_vect_advertiser.cpp	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	src/examples/listeners/sensor_combined_listener.cpp	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	src/examples/listeners/vehicle_gps_position_listener.cpp	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	src/examples/offboard/offboard_control.cpp	/^int main(int argc, char* argv[]) {$/;"	f	signature:(int argc, char* argv[])
main	src/examples/offboard/offboard_control_original.cpp	/^int main(int argc, char* argv[]) {$/;"	f	signature:(int argc, char* argv[])
main	src/shared_control/offboard_control_original.cpp	/^int main(int argc, char* argv[]) {$/;"	f	signature:(int argc, char* argv[])
main	src/shared_control/sensor_combined.cpp	/^int main(int argc, char* argv[]) {$/;"	f	signature:(int argc, char* argv[])
marker	templates/microRTPS_transport.h	/^		char marker[3];$/;"	m	struct:Transport_node::Header	access:public
merge_em_globals_list	scripts/px_generate_uorb_topic_files.py	/^def merge_em_globals_list(em_globals_list):$/;"	f	access:public
microRTPS_transport.cpp	templates/microRTPS_transport.cpp	1;"	F
microRTPS_transport.h	templates/microRTPS_transport.h	1;"	F
mkdir_build	scripts/generate_microRTPS_bridge.py	/^mkdir_build = args.mkdir_build$/;"	v
mkdir_p	scripts/generate_microRTPS_bridge.py	/^def mkdir_p(dirpath):$/;"	f	access:public
msg_dir	scripts/generate_microRTPS_bridge.py	/^msg_dir = os.path.abspath(args.msgdir)$/;"	v
msg_dir	scripts/uorb_rtps_classifier.py	/^    msg_dir = args.msgdir$/;"	v
msgs	scripts/px_generate_uorb_topic_helper.py	/^import genmsg.msgs$/;"	i
msgtype_size_map	scripts/px_generate_uorb_topic_helper.py	/^msgtype_size_map = {$/;"	v
ned_to_aircraft_frame	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T ned_to_aircraft_frame(const T &in, const Eigen::Quaterniond &q)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in, const Eigen::Quaterniond &q)
ned_to_enu_local_frame	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T ned_to_enu_local_frame(const T &in)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in)
ned_to_enu_orientation	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T ned_to_enu_orientation(const T &in)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in)
node	test/pipeline_io_test.py	/^            node = "debug_vect_advertiser"$/;"	v
node	test/pipeline_io_test.py	/^            node = "sensor_combined_listener"$/;"	v
node	test/pipeline_io_test.py	/^            node = "system_monitor_node"$/;"	v
node_read	templates/microRTPS_transport.cpp	/^ssize_t UART_node::node_read(void *buffer, size_t len)$/;"	f	class:UART_node	signature:(void *buffer, size_t len)
node_read	templates/microRTPS_transport.cpp	/^ssize_t UDP_node::node_read(void *buffer, size_t len)$/;"	f	class:UDP_node	signature:(void *buffer, size_t len)
node_read	templates/microRTPS_transport.h	/^	ssize_t node_read(void *buffer, size_t len);$/;"	p	class:UART_node	access:protected	signature:(void *buffer, size_t len)
node_read	templates/microRTPS_transport.h	/^	ssize_t node_read(void *buffer, size_t len);$/;"	p	class:UDP_node	access:protected	signature:(void *buffer, size_t len)
node_read	templates/microRTPS_transport.h	/^	virtual ssize_t node_read(void *buffer, size_t len) = 0;$/;"	p	class:Transport_node	access:protected	signature:(void *buffer, size_t len)
node_write	templates/microRTPS_transport.cpp	/^ssize_t UART_node::node_write(void *buffer, size_t len)$/;"	f	class:UART_node	signature:(void *buffer, size_t len)
node_write	templates/microRTPS_transport.cpp	/^ssize_t UDP_node::node_write(void *buffer, size_t len)$/;"	f	class:UDP_node	signature:(void *buffer, size_t len)
node_write	templates/microRTPS_transport.h	/^	ssize_t node_write(void *buffer, size_t len);$/;"	p	class:UART_node	access:protected	signature:(void *buffer, size_t len)
node_write	templates/microRTPS_transport.h	/^	ssize_t node_write(void *buffer, size_t len);$/;"	p	class:UDP_node	access:protected	signature:(void *buffer, size_t len)
node_write	templates/microRTPS_transport.h	/^	virtual ssize_t node_write(void *buffer, size_t len) = 0;$/;"	p	class:Transport_node	access:protected	signature:(void *buffer, size_t len)
offboard_control.cpp	src/examples/offboard/offboard_control.cpp	1;"	F
offboard_control_mode_publisher_	src/examples/offboard/offboard_control.cpp	/^	rclcpp::Publisher<OffboardControlMode>::SharedPtr offboard_control_mode_publisher_;$/;"	m	class:OffboardControl	file:	access:private
offboard_control_mode_publisher_	src/examples/offboard/offboard_control_original.cpp	/^	rclcpp::Publisher<OffboardControlMode>::SharedPtr offboard_control_mode_publisher_;$/;"	m	class:OffboardControl	file:	access:private
offboard_control_original.cpp	src/examples/offboard/offboard_control_original.cpp	1;"	F
offboard_control_original.cpp	src/shared_control/offboard_control_original.cpp	1;"	F
offboard_setpoint_counter_	src/examples/offboard/offboard_control.cpp	/^	uint64_t offboard_setpoint_counter_;   \/\/!< counter for the number of setpoints sent$/;"	m	class:OffboardControl	file:	access:private
offboard_setpoint_counter_	src/examples/offboard/offboard_control_original.cpp	/^	uint64_t offboard_setpoint_counter_;   \/\/!< counter for the number of setpoints sent$/;"	m	class:OffboardControl	file:	access:private
os	launch/px4_launch.py	/^import os$/;"	i
os	launch/sensor_combined_listener.launch.py	/^import os$/;"	i
os	scripts/generate_microRTPS_bridge.py	/^import os$/;"	i
os	scripts/px_generate_uorb_topic_files.py	/^import os$/;"	i
os	scripts/px_generate_uorb_topic_helper.py	/^import os$/;"	i
os	scripts/uorb_rtps_classifier.py	/^import os$/;"	i
os	test/pipeline_io_test.py	/^import os$/;"	i
os	test/test_input.py	/^import os$/;"	i
output	test/test_input.py	/^    output = check_output(test_cmd, shell=True, universal_newlines=True)$/;"	v
output	test/test_output.py	/^        output = open("ros2_topic_echo_out", "r").read()$/;"	v
package	scripts/generate_microRTPS_bridge.py	/^package = args.package$/;"	v
package_name	test/pipeline_io_test.py	/^            package_name = "px4_ros_com"$/;"	v
package_name	test/pipeline_io_test.py	/^            package_name = "system_monitor_ros"$/;"	v
packaging	scripts/generate_microRTPS_bridge.py	/^    print("Failed to import packaging: " + str(e))$/;"	i
packaging	scripts/px_generate_uorb_topic_files.py	/^    print("Failed to import packaging: " + str(e))$/;"	i
parse_yaml_msgs_file	scripts/uorb_rtps_classifier.py	/^    def parse_yaml_msgs_file(yaml_file) -> dict:$/;"	m	class:Classifier	access:public
parser	scripts/generate_microRTPS_bridge.py	/^parser = argparse.ArgumentParser()$/;"	v
parser	scripts/uorb_rtps_classifier.py	/^    parser = argparse.ArgumentParser()$/;"	v
parser	test/pipeline_io_test.py	/^    parser = argparse.ArgumentParser()$/;"	v
parser	test/test_input.py	/^    parser = argparse.ArgumentParser()$/;"	v
parser	test/test_output.py	/^    parser = argparse.ArgumentParser()$/;"	v
payload_len_h	templates/microRTPS_transport.h	/^		uint8_t payload_len_h;$/;"	m	struct:Transport_node::Header	access:public
payload_len_l	templates/microRTPS_transport.h	/^		uint8_t payload_len_l;$/;"	m	struct:Transport_node::Header	access:public
pipeline_io_test.py	test/pipeline_io_test.py	1;"	F
print_field_def	scripts/px_generate_uorb_topic_helper.py	/^def print_field_def(field):$/;"	f	access:public
publish_offboard_control_mode	src/examples/offboard/offboard_control.cpp	/^	void publish_offboard_control_mode() const;$/;"	p	class:OffboardControl	file:	access:private	signature:() const
publish_offboard_control_mode	src/examples/offboard/offboard_control.cpp	/^void OffboardControl::publish_offboard_control_mode() const {$/;"	f	class:OffboardControl	signature:() const
publish_offboard_control_mode	src/examples/offboard/offboard_control_original.cpp	/^	void publish_offboard_control_mode() const;$/;"	p	class:OffboardControl	file:	access:private	signature:() const
publish_offboard_control_mode	src/examples/offboard/offboard_control_original.cpp	/^void OffboardControl::publish_offboard_control_mode() const {$/;"	f	class:OffboardControl	signature:() const
publish_offboard_control_mode	src/shared_control/offboard_control_original.cpp	/^	void publish_offboard_control_mode() const;$/;"	p	class:ShotTypeExecuter	file:	access:private	signature:() const
publish_offboard_control_mode	src/shared_control/offboard_control_original.cpp	/^void OffboardControl::publish_offboard_control_mode() const {$/;"	f	class:OffboardControl	signature:() const
publish_shotTypetrajectory	src/shared_control/offboard_control_original.cpp	/^	void publish_shotTypetrajectory() const;$/;"	p	class:ShotTypeExecuter	file:	access:private	signature:() const
publish_shotTypetrajectory	src/shared_control/offboard_control_original.cpp	/^void shotTypeExecuter::publish_shotTypetrajectory() const{$/;"	f	class:shotTypeExecuter	signature:() const
publish_trajectory_setpoint	src/examples/offboard/offboard_control.cpp	/^	void publish_trajectory_setpoint(float x, float y, float z) const;$/;"	p	class:OffboardControl	file:	access:private	signature:(float x, float y, float z) const
publish_trajectory_setpoint	src/examples/offboard/offboard_control.cpp	/^void OffboardControl::publish_trajectory_setpoint(float x, float y, float z) const {$/;"	f	class:OffboardControl	signature:(float x, float y, float z) const
publish_trajectory_setpoint	src/examples/offboard/offboard_control_original.cpp	/^	void publish_trajectory_setpoint() const;$/;"	p	class:OffboardControl	file:	access:private	signature:() const
publish_trajectory_setpoint	src/examples/offboard/offboard_control_original.cpp	/^void OffboardControl::publish_trajectory_setpoint() const {$/;"	f	class:OffboardControl	signature:() const
publish_trajectory_setpoint	src/shared_control/offboard_control_original.cpp	/^	void publish_trajectory_setpoint() const;$/;"	p	class:ShotTypeExecuter	file:	access:private	signature:() const
publish_trajectory_setpoint	src/shared_control/offboard_control_original.cpp	/^void OffboardControl::publish_trajectory_setpoint() const {$/;"	f	class:OffboardControl	signature:() const
publish_vehicle_command	src/examples/offboard/offboard_control.cpp	/^	void publish_vehicle_command(uint16_t command, float param1 = 0.0,$/;"	p	class:OffboardControl	file:	access:private	signature:(uint16_t command, float param1 = 0.0, float param2 = 0.0) const
publish_vehicle_command	src/examples/offboard/offboard_control.cpp	/^void OffboardControl::publish_vehicle_command(uint16_t command, float param1,$/;"	f	class:OffboardControl	signature:(uint16_t command, float param1, float param2) const
publish_vehicle_command	src/examples/offboard/offboard_control_original.cpp	/^	void publish_vehicle_command(uint16_t command, float param1 = 0.0,$/;"	p	class:OffboardControl	file:	access:private	signature:(uint16_t command, float param1 = 0.0, float param2 = 0.0) const
publish_vehicle_command	src/examples/offboard/offboard_control_original.cpp	/^void OffboardControl::publish_vehicle_command(uint16_t command, float param1,$/;"	f	class:OffboardControl	signature:(uint16_t command, float param1, float param2) const
publish_vehicle_command	src/shared_control/offboard_control_original.cpp	/^	void publish_vehicle_command(uint16_t command, float param1 = 0.0,$/;"	p	class:ShotTypeExecuter	file:	access:private	signature:(uint16_t command, float param1 = 0.0, float param2 = 0.0) const
publish_vehicle_command	src/shared_control/offboard_control_original.cpp	/^void OffboardControl::publish_vehicle_command(uint16_t command, float param1,$/;"	f	class:OffboardControl	signature:(uint16_t command, float param1, float param2) const
publisher_	src/examples/advertisers/debug_vect_advertiser.cpp	/^	rclcpp::Publisher<px4_msgs::msg::DebugVect>::SharedPtr publisher_;$/;"	m	class:DebugVectAdvertiser	file:	access:private
publisher_	src/shared_control/sensor_combined.cpp	/^	rclcpp::Publisher<px4_msgs::msg::SensorDataComputed>::SharedPtr publisher_;	$/;"	m	class:SensorFusion	file:	access:private
px4_bin_dir	test/pipeline_io_test.py	/^    px4_bin_dir = os.path.join(px4_dir, "build\/px4_sitl_rtps\/bin")$/;"	v
px4_dir	test/pipeline_io_test.py	/^        px4_dir = args.px4_dir$/;"	v
px4_launch.py	launch/px4_launch.py	1;"	F
px4_ros_com	include/px4_ros_com/frame_transforms.h	/^namespace px4_ros_com$/;"	n
px4_ros_com	src/lib/frame_transforms.cpp	/^namespace px4_ros_com$/;"	n	file:
px4_ros_com::frame_transforms	include/px4_ros_com/frame_transforms.h	/^namespace frame_transforms$/;"	n	namespace:px4_ros_com
px4_ros_com::frame_transforms	src/lib/frame_transforms.cpp	/^namespace frame_transforms$/;"	n	namespace:px4_ros_com	file:
px4_ros_com::frame_transforms::AIRCRAFT_BASELINK_AFFINE	include/px4_ros_com/frame_transforms.h	/^static const Eigen::Affine3d AIRCRAFT_BASELINK_AFFINE(AIRCRAFT_BASELINK_Q);$/;"	p	namespace:px4_ros_com::frame_transforms	signature:(AIRCRAFT_BASELINK_Q)
px4_ros_com::frame_transforms::AIRCRAFT_BASELINK_Q	include/px4_ros_com/frame_transforms.h	/^static const auto AIRCRAFT_BASELINK_Q = utils::quaternion::quaternion_from_euler(M_PI, 0.0, 0.0);$/;"	m	namespace:px4_ros_com::frame_transforms
px4_ros_com::frame_transforms::AIRCRAFT_BASELINK_R	include/px4_ros_com/frame_transforms.h	/^static const auto AIRCRAFT_BASELINK_R = AIRCRAFT_BASELINK_Q.normalized().toRotationMatrix();$/;"	m	namespace:px4_ros_com::frame_transforms
px4_ros_com::frame_transforms::NED_ENU_AFFINE	include/px4_ros_com/frame_transforms.h	/^static const Eigen::Affine3d NED_ENU_AFFINE(NED_ENU_Q);$/;"	p	namespace:px4_ros_com::frame_transforms	signature:(NED_ENU_Q)
px4_ros_com::frame_transforms::NED_ENU_Q	include/px4_ros_com/frame_transforms.h	/^static const auto NED_ENU_Q = utils::quaternion::quaternion_from_euler(M_PI, 0.0, M_PI_2);$/;"	m	namespace:px4_ros_com::frame_transforms
px4_ros_com::frame_transforms::NED_ENU_R	include/px4_ros_com/frame_transforms.h	/^static const auto NED_ENU_R = NED_ENU_Q.normalized().toRotationMatrix();$/;"	m	namespace:px4_ros_com::frame_transforms
px4_ros_com::frame_transforms::StaticTF	include/px4_ros_com/frame_transforms.h	/^enum class StaticTF {$/;"	c	namespace:px4_ros_com::frame_transforms
px4_ros_com::frame_transforms::StaticTF::AIRCRAFT_TO_BASELINK	include/px4_ros_com/frame_transforms.h	/^	AIRCRAFT_TO_BASELINK,      \/\/!< change from expressed WRT aircraft frame to WRT to baselink frame$/;"	m	class:px4_ros_com::frame_transforms::StaticTF	access:private
px4_ros_com::frame_transforms::StaticTF::BASELINK_TO_AIRCRAFT	include/px4_ros_com/frame_transforms.h	/^	BASELINK_TO_AIRCRAFT,      \/\/!< change from expressed WRT baselnk to WRT aircraft$/;"	m	class:px4_ros_com::frame_transforms::StaticTF	access:private
px4_ros_com::frame_transforms::StaticTF::ECEF_TO_ENU	include/px4_ros_com/frame_transforms.h	/^	ECEF_TO_ENU,	           \/\/!< change from expressed WRT ECEF frame to WRT ENU frame$/;"	m	class:px4_ros_com::frame_transforms::StaticTF	access:private
px4_ros_com::frame_transforms::StaticTF::ENU_TO_NED	include/px4_ros_com/frame_transforms.h	/^	ENU_TO_NED,	           \/\/!< change from expressed WRT ENU frame to WRT NED frame$/;"	m	class:px4_ros_com::frame_transforms::StaticTF	access:private
px4_ros_com::frame_transforms::StaticTF::NED_TO_ENU	include/px4_ros_com/frame_transforms.h	/^	NED_TO_ENU,	           \/\/!< change from expressed WRT NED frame to WRT ENU frame$/;"	m	class:px4_ros_com::frame_transforms::StaticTF	access:private
px4_ros_com::frame_transforms::aircraft_to_baselink_body_frame	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T aircraft_to_baselink_body_frame(const T &in)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in)
px4_ros_com::frame_transforms::aircraft_to_baselink_orientation	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T aircraft_to_baselink_orientation(const T &in)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in)
px4_ros_com::frame_transforms::aircraft_to_enu_frame	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T aircraft_to_enu_frame(const T &in, const Eigen::Quaterniond &q)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in, const Eigen::Quaterniond &q)
px4_ros_com::frame_transforms::aircraft_to_ned_frame	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T aircraft_to_ned_frame(const T &in, const Eigen::Quaterniond &q)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in, const Eigen::Quaterniond &q)
px4_ros_com::frame_transforms::baselink_to_aircraft_body_frame	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T baselink_to_aircraft_body_frame(const T &in)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in)
px4_ros_com::frame_transforms::baselink_to_aircraft_orientation	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T baselink_to_aircraft_orientation(const T &in)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in)
px4_ros_com::frame_transforms::baselink_to_enu_frame	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T baselink_to_enu_frame(const T &in, const Eigen::Quaterniond &q)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in, const Eigen::Quaterniond &q)
px4_ros_com::frame_transforms::ecef_to_enu_local_frame	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T ecef_to_enu_local_frame(const T &in, const T &map_origin)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in, const T &map_origin)
px4_ros_com::frame_transforms::enu_to_aircraft_frame	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T enu_to_aircraft_frame(const T &in, const Eigen::Quaterniond &q)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in, const Eigen::Quaterniond &q)
px4_ros_com::frame_transforms::enu_to_baselink_frame	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T enu_to_baselink_frame(const T &in, const Eigen::Quaterniond &q)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in, const Eigen::Quaterniond &q)
px4_ros_com::frame_transforms::enu_to_ecef_local_frame	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T enu_to_ecef_local_frame(const T &in, const T &map_origin)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in, const T &map_origin)
px4_ros_com::frame_transforms::enu_to_ned_local_frame	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T enu_to_ned_local_frame(const T &in)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in)
px4_ros_com::frame_transforms::enu_to_ned_orientation	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T enu_to_ned_orientation(const T &in)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in)
px4_ros_com::frame_transforms::ned_to_aircraft_frame	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T ned_to_aircraft_frame(const T &in, const Eigen::Quaterniond &q)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in, const Eigen::Quaterniond &q)
px4_ros_com::frame_transforms::ned_to_enu_local_frame	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T ned_to_enu_local_frame(const T &in)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in)
px4_ros_com::frame_transforms::ned_to_enu_orientation	include/px4_ros_com/frame_transforms.h	/^template <class T> inline T ned_to_enu_orientation(const T &in)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const T &in)
px4_ros_com::frame_transforms::transform_frame	include/px4_ros_com/frame_transforms.h	/^Covariance3d transform_frame(const Covariance3d &cov, const Eigen::Quaterniond &q);$/;"	p	namespace:px4_ros_com::frame_transforms	signature:(const Covariance3d &cov, const Eigen::Quaterniond &q)
px4_ros_com::frame_transforms::transform_frame	include/px4_ros_com/frame_transforms.h	/^Covariance6d transform_frame(const Covariance6d &cov, const Eigen::Quaterniond &q);$/;"	p	namespace:px4_ros_com::frame_transforms	signature:(const Covariance6d &cov, const Eigen::Quaterniond &q)
px4_ros_com::frame_transforms::transform_frame	include/px4_ros_com/frame_transforms.h	/^Covariance9d transform_frame(const Covariance9d &cov, const Eigen::Quaterniond &q);$/;"	p	namespace:px4_ros_com::frame_transforms	signature:(const Covariance9d &cov, const Eigen::Quaterniond &q)
px4_ros_com::frame_transforms::transform_frame	include/px4_ros_com/frame_transforms.h	/^Eigen::Vector3d transform_frame(const Eigen::Vector3d &vec, const Eigen::Quaterniond &q);$/;"	p	namespace:px4_ros_com::frame_transforms	signature:(const Eigen::Vector3d &vec, const Eigen::Quaterniond &q)
px4_ros_com::frame_transforms::transform_frame	src/lib/frame_transforms.cpp	/^Covariance3d transform_frame(const Covariance3d &cov, const Eigen::Quaterniond &q)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const Covariance3d &cov, const Eigen::Quaterniond &q)
px4_ros_com::frame_transforms::transform_frame	src/lib/frame_transforms.cpp	/^Covariance6d transform_frame(const Covariance6d &cov, const Eigen::Quaterniond &q)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const Covariance6d &cov, const Eigen::Quaterniond &q)
px4_ros_com::frame_transforms::transform_frame	src/lib/frame_transforms.cpp	/^Covariance9d transform_frame(const Covariance9d &cov, const Eigen::Quaterniond &q)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const Covariance9d &cov, const Eigen::Quaterniond &q)
px4_ros_com::frame_transforms::transform_frame	src/lib/frame_transforms.cpp	/^Eigen::Vector3d transform_frame(const Eigen::Vector3d &vec, const Eigen::Quaterniond &q)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const Eigen::Vector3d &vec, const Eigen::Quaterniond &q)
px4_ros_com::frame_transforms::transform_orientation	src/lib/frame_transforms.cpp	/^Eigen::Quaterniond transform_orientation(const Eigen::Quaterniond &q, const StaticTF transform)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const Eigen::Quaterniond &q, const StaticTF transform)
px4_ros_com::frame_transforms::transform_static_frame	include/px4_ros_com/frame_transforms.h	/^Covariance3d transform_static_frame(const Covariance3d &cov, const StaticTF transform);$/;"	p	namespace:px4_ros_com::frame_transforms	signature:(const Covariance3d &cov, const StaticTF transform)
px4_ros_com::frame_transforms::transform_static_frame	include/px4_ros_com/frame_transforms.h	/^Covariance6d transform_static_frame(const Covariance6d &cov, const StaticTF transform);$/;"	p	namespace:px4_ros_com::frame_transforms	signature:(const Covariance6d &cov, const StaticTF transform)
px4_ros_com::frame_transforms::transform_static_frame	include/px4_ros_com/frame_transforms.h	/^Covariance9d transform_static_frame(const Covariance9d &cov, const StaticTF transform);$/;"	p	namespace:px4_ros_com::frame_transforms	signature:(const Covariance9d &cov, const StaticTF transform)
px4_ros_com::frame_transforms::transform_static_frame	include/px4_ros_com/frame_transforms.h	/^Eigen::Vector3d transform_static_frame(const Eigen::Vector3d &vec, const Eigen::Vector3d &map_origin,$/;"	p	namespace:px4_ros_com::frame_transforms	signature:(const Eigen::Vector3d &vec, const Eigen::Vector3d &map_origin, const StaticTF transform)
px4_ros_com::frame_transforms::transform_static_frame	include/px4_ros_com/frame_transforms.h	/^Eigen::Vector3d transform_static_frame(const Eigen::Vector3d &vec, const StaticTF transform);$/;"	p	namespace:px4_ros_com::frame_transforms	signature:(const Eigen::Vector3d &vec, const StaticTF transform)
px4_ros_com::frame_transforms::transform_static_frame	src/lib/frame_transforms.cpp	/^Covariance3d transform_static_frame(const Covariance3d &cov, const StaticTF transform)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const Covariance3d &cov, const StaticTF transform)
px4_ros_com::frame_transforms::transform_static_frame	src/lib/frame_transforms.cpp	/^Covariance6d transform_static_frame(const Covariance6d &cov, const StaticTF transform)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const Covariance6d &cov, const StaticTF transform)
px4_ros_com::frame_transforms::transform_static_frame	src/lib/frame_transforms.cpp	/^Covariance9d transform_static_frame(const Covariance9d &cov, const StaticTF transform)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const Covariance9d &cov, const StaticTF transform)
px4_ros_com::frame_transforms::transform_static_frame	src/lib/frame_transforms.cpp	/^Eigen::Vector3d transform_static_frame(const Eigen::Vector3d &vec, const Eigen::Vector3d &map_origin,$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const Eigen::Vector3d &vec, const Eigen::Vector3d &map_origin, const StaticTF transform)
px4_ros_com::frame_transforms::transform_static_frame	src/lib/frame_transforms.cpp	/^Eigen::Vector3d transform_static_frame(const Eigen::Vector3d &vec, const StaticTF transform)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const Eigen::Vector3d &vec, const StaticTF transform)
px4_ros_com::frame_transforms::utils	include/px4_ros_com/frame_transforms.h	/^namespace utils$/;"	n	namespace:px4_ros_com::frame_transforms
px4_ros_com::frame_transforms::utils	src/lib/frame_transforms.cpp	/^namespace utils$/;"	n	namespace:px4_ros_com::frame_transforms	file:
px4_ros_com::frame_transforms::utils::quaternion	include/px4_ros_com/frame_transforms.h	/^namespace quaternion$/;"	n	namespace:px4_ros_com::frame_transforms::utils
px4_ros_com::frame_transforms::utils::quaternion	src/lib/frame_transforms.cpp	/^namespace quaternion$/;"	n	namespace:px4_ros_com::frame_transforms::utils	file:
px4_ros_com::frame_transforms::utils::quaternion::array_to_eigen_quat	include/px4_ros_com/frame_transforms.h	/^Eigen::Quaterniond array_to_eigen_quat(const std::array<float, 4> &q);$/;"	p	namespace:px4_ros_com::frame_transforms::utils::quaternion	signature:(const std::array<float, 4> &q)
px4_ros_com::frame_transforms::utils::quaternion::array_to_eigen_quat	src/lib/frame_transforms.cpp	/^Eigen::Quaterniond array_to_eigen_quat(const std::array<float, 4> &q)$/;"	f	namespace:px4_ros_com::frame_transforms::utils::quaternion	signature:(const std::array<float, 4> &q)
px4_ros_com::frame_transforms::utils::quaternion::eigen_quat_to_array	include/px4_ros_com/frame_transforms.h	/^void eigen_quat_to_array(const Eigen::Quaterniond &q, std::array<float, 4> &qarray);$/;"	p	namespace:px4_ros_com::frame_transforms::utils::quaternion	signature:(const Eigen::Quaterniond &q, std::array<float, 4> &qarray)
px4_ros_com::frame_transforms::utils::quaternion::eigen_quat_to_array	src/lib/frame_transforms.cpp	/^void eigen_quat_to_array(const Eigen::Quaterniond &q, std::array<float, 4> &qarray)$/;"	f	namespace:px4_ros_com::frame_transforms::utils::quaternion	signature:(const Eigen::Quaterniond &q, std::array<float, 4> &qarray)
px4_ros_com::frame_transforms::utils::quaternion::quaternion_from_euler	include/px4_ros_com/frame_transforms.h	/^Eigen::Quaterniond quaternion_from_euler(const Eigen::Vector3d &euler);$/;"	p	namespace:px4_ros_com::frame_transforms::utils::quaternion	signature:(const Eigen::Vector3d &euler)
px4_ros_com::frame_transforms::utils::quaternion::quaternion_from_euler	include/px4_ros_com/frame_transforms.h	/^Eigen::Quaterniond quaternion_from_euler(const double roll, const double pitch, const double yaw);$/;"	p	namespace:px4_ros_com::frame_transforms::utils::quaternion	signature:(const double roll, const double pitch, const double yaw)
px4_ros_com::frame_transforms::utils::quaternion::quaternion_from_euler	src/lib/frame_transforms.cpp	/^Eigen::Quaterniond quaternion_from_euler(const Eigen::Vector3d &euler)$/;"	f	namespace:px4_ros_com::frame_transforms::utils::quaternion	signature:(const Eigen::Vector3d &euler)
px4_ros_com::frame_transforms::utils::quaternion::quaternion_from_euler	src/lib/frame_transforms.cpp	/^Eigen::Quaterniond quaternion_from_euler(const double roll, const double pitch, const double yaw)$/;"	f	namespace:px4_ros_com::frame_transforms::utils::quaternion	signature:(const double roll, const double pitch, const double yaw)
px4_ros_com::frame_transforms::utils::quaternion::quaternion_get_yaw	include/px4_ros_com/frame_transforms.h	/^double quaternion_get_yaw(const Eigen::Quaterniond &q);$/;"	p	namespace:px4_ros_com::frame_transforms::utils::quaternion	signature:(const Eigen::Quaterniond &q)
px4_ros_com::frame_transforms::utils::quaternion::quaternion_get_yaw	src/lib/frame_transforms.cpp	/^double quaternion_get_yaw(const Eigen::Quaterniond &q)$/;"	f	namespace:px4_ros_com::frame_transforms::utils::quaternion	signature:(const Eigen::Quaterniond &q)
px4_ros_com::frame_transforms::utils::quaternion::quaternion_to_euler	include/px4_ros_com/frame_transforms.h	/^Eigen::Vector3d quaternion_to_euler(const Eigen::Quaterniond &q);$/;"	p	namespace:px4_ros_com::frame_transforms::utils::quaternion	signature:(const Eigen::Quaterniond &q)
px4_ros_com::frame_transforms::utils::quaternion::quaternion_to_euler	include/px4_ros_com/frame_transforms.h	/^void quaternion_to_euler(const Eigen::Quaterniond &q, double &roll, double &pitch, double &yaw);$/;"	p	namespace:px4_ros_com::frame_transforms::utils::quaternion	signature:(const Eigen::Quaterniond &q, double &roll, double &pitch, double &yaw)
px4_ros_com::frame_transforms::utils::quaternion::quaternion_to_euler	src/lib/frame_transforms.cpp	/^Eigen::Vector3d quaternion_to_euler(const Eigen::Quaterniond &q)$/;"	f	namespace:px4_ros_com::frame_transforms::utils::quaternion	signature:(const Eigen::Quaterniond &q)
px4_ros_com::frame_transforms::utils::quaternion::quaternion_to_euler	src/lib/frame_transforms.cpp	/^void quaternion_to_euler(const Eigen::Quaterniond &q, double &roll, double &pitch, double &yaw)$/;"	f	namespace:px4_ros_com::frame_transforms::utils::quaternion	signature:(const Eigen::Quaterniond &q, double &roll, double &pitch, double &yaw)
px4_ros_com::frame_transforms::utils::types	include/px4_ros_com/frame_transforms.h	/^namespace types$/;"	n	namespace:px4_ros_com::frame_transforms::utils
px4_ros_com::frame_transforms::utils::types	src/lib/frame_transforms.cpp	/^namespace types$/;"	n	namespace:px4_ros_com::frame_transforms::utils	file:
px4_ros_com::frame_transforms::utils::types::array_urt_to_covariance_matrix	include/px4_ros_com/frame_transforms.h	/^void array_urt_to_covariance_matrix(const std::array<float, ARR_SIZE> &covmsg, T &covmat);$/;"	p	namespace:px4_ros_com::frame_transforms::utils::types	signature:(const std::array<float, ARR_SIZE> &covmsg, T &covmat)
px4_ros_com::frame_transforms::utils::types::array_urt_to_covariance_matrix	src/lib/frame_transforms.cpp	/^void array_urt_to_covariance_matrix(const std::array<float, ARR_SIZE> &covmsg, T &covmat)$/;"	f	namespace:px4_ros_com::frame_transforms::utils::types	signature:(const std::array<float, ARR_SIZE> &covmsg, T &covmat)
px4_ros_com::frame_transforms::utils::types::covariance_to_array	include/px4_ros_com/frame_transforms.h	/^template <class T, std::size_t SIZE> void covariance_to_array(const T &cov, std::array<float, SIZE> &covmsg);$/;"	p	namespace:px4_ros_com::frame_transforms::utils::types	signature:(const T &cov, std::array<float, SIZE> &covmsg)
px4_ros_com::frame_transforms::utils::types::covariance_to_array	src/lib/frame_transforms.cpp	/^template <class T, std::size_t SIZE> void covariance_to_array(const T &cov, std::array<float, SIZE> &covmsg)$/;"	f	namespace:px4_ros_com::frame_transforms::utils::types	signature:(const T &cov, std::array<float, SIZE> &covmsg)
px4_ros_com::frame_transforms::utils::types::covariance_urt_to_array	include/px4_ros_com/frame_transforms.h	/^void covariance_urt_to_array(const T &covmap, std::array<float, ARR_SIZE> &covmsg);$/;"	p	namespace:px4_ros_com::frame_transforms::utils::types	signature:(const T &covmap, std::array<float, ARR_SIZE> &covmsg)
px4_ros_com::frame_transforms::utils::types::covariance_urt_to_array	src/lib/frame_transforms.cpp	/^void covariance_urt_to_array(const T &covmap, std::array<float, ARR_SIZE> &covmsg)$/;"	f	namespace:px4_ros_com::frame_transforms::utils::types	signature:(const T &covmap, std::array<float, ARR_SIZE> &covmsg)
px4_tag	test/pipeline_io_test.py	/^    px4_tag = check_output($/;"	v
px4_target	test/pipeline_io_test.py	/^    px4_target = args.px4_target$/;"	v
px_generate_uorb_topic_files	scripts/generate_microRTPS_bridge.py	/^import px_generate_uorb_topic_files$/;"	i
px_generate_uorb_topic_files.py	scripts/px_generate_uorb_topic_files.py	1;"	F
px_generate_uorb_topic_helper.py	scripts/px_generate_uorb_topic_helper.py	1;"	F
quaternion	include/px4_ros_com/frame_transforms.h	/^namespace quaternion$/;"	n	namespace:px4_ros_com::frame_transforms::utils
quaternion	src/lib/frame_transforms.cpp	/^namespace quaternion$/;"	n	namespace:px4_ros_com::frame_transforms::utils	file:
quaternion_from_euler	include/px4_ros_com/frame_transforms.h	/^Eigen::Quaterniond quaternion_from_euler(const Eigen::Vector3d &euler);$/;"	p	namespace:px4_ros_com::frame_transforms::utils::quaternion	signature:(const Eigen::Vector3d &euler)
quaternion_from_euler	include/px4_ros_com/frame_transforms.h	/^Eigen::Quaterniond quaternion_from_euler(const double roll, const double pitch, const double yaw);$/;"	p	namespace:px4_ros_com::frame_transforms::utils::quaternion	signature:(const double roll, const double pitch, const double yaw)
quaternion_from_euler	src/lib/frame_transforms.cpp	/^Eigen::Quaterniond quaternion_from_euler(const Eigen::Vector3d &euler)$/;"	f	namespace:px4_ros_com::frame_transforms::utils::quaternion	signature:(const Eigen::Vector3d &euler)
quaternion_from_euler	src/lib/frame_transforms.cpp	/^Eigen::Quaterniond quaternion_from_euler(const double roll, const double pitch, const double yaw)$/;"	f	namespace:px4_ros_com::frame_transforms::utils::quaternion	signature:(const double roll, const double pitch, const double yaw)
quaternion_get_yaw	include/px4_ros_com/frame_transforms.h	/^double quaternion_get_yaw(const Eigen::Quaterniond &q);$/;"	p	namespace:px4_ros_com::frame_transforms::utils::quaternion	signature:(const Eigen::Quaterniond &q)
quaternion_get_yaw	src/lib/frame_transforms.cpp	/^double quaternion_get_yaw(const Eigen::Quaterniond &q)$/;"	f	namespace:px4_ros_com::frame_transforms::utils::quaternion	signature:(const Eigen::Quaterniond &q)
quaternion_to_euler	include/px4_ros_com/frame_transforms.h	/^Eigen::Vector3d quaternion_to_euler(const Eigen::Quaterniond &q);$/;"	p	namespace:px4_ros_com::frame_transforms::utils::quaternion	signature:(const Eigen::Quaterniond &q)
quaternion_to_euler	include/px4_ros_com/frame_transforms.h	/^void quaternion_to_euler(const Eigen::Quaterniond &q, double &roll, double &pitch, double &yaw);$/;"	p	namespace:px4_ros_com::frame_transforms::utils::quaternion	signature:(const Eigen::Quaterniond &q, double &roll, double &pitch, double &yaw)
quaternion_to_euler	src/lib/frame_transforms.cpp	/^Eigen::Vector3d quaternion_to_euler(const Eigen::Quaterniond &q)$/;"	f	namespace:px4_ros_com::frame_transforms::utils::quaternion	signature:(const Eigen::Quaterniond &q)
quaternion_to_euler	src/lib/frame_transforms.cpp	/^void quaternion_to_euler(const Eigen::Quaterniond &q, double &roll, double &pitch, double &yaw)$/;"	f	namespace:px4_ros_com::frame_transforms::utils::quaternion	signature:(const Eigen::Quaterniond &q, double &roll, double &pitch, double &yaw)
re	scripts/generate_microRTPS_bridge.py	/^import re$/;"	i
read	templates/microRTPS_transport.cpp	/^ssize_t Transport_node::read(uint8_t *topic_id, char out_buffer[], size_t buffer_len)$/;"	f	class:Transport_node	signature:(uint8_t *topic_id, char out_buffer[], size_t buffer_len)
read	templates/microRTPS_transport.h	/^	ssize_t read(uint8_t *topic_id, char out_buffer[], size_t buffer_len);$/;"	p	class:Transport_node	access:public	signature:(uint8_t *topic_id, char out_buffer[], size_t buffer_len)
remove	test/test_output.py	/^from os import remove$/;"	i
rm_wildcard	scripts/generate_microRTPS_bridge.py	/^def rm_wildcard(pattern):$/;"	f	access:public
ros2_distro	scripts/generate_microRTPS_bridge.py	/^        ros2_distro = args.ros2_distro$/;"	v
ros2_distro	scripts/generate_microRTPS_bridge.py	/^        ros2_distro = os.environ.get('ROS_DISTRO')$/;"	v
ros2_distro	scripts/generate_microRTPS_bridge.py	/^ros2_distro = ''$/;"	v
ros_distro	test/pipeline_io_test.py	/^    ros_distro = check_output("rosversion -d", shell=True)$/;"	v
ros_version	scripts/generate_microRTPS_bridge.py	/^ros_version = os.environ.get('ROS_VERSION')$/;"	v
sensor_combined.cpp	src/shared_control/sensor_combined.cpp	1;"	F
sensor_combined_listener.cpp	src/examples/listeners/sensor_combined_listener.cpp	1;"	F
sensor_combined_listener.launch.py	launch/sensor_combined_listener.launch.py	1;"	F
sensor_combined_sub_	src/shared_control/offboard_control_original.cpp	/^	rclcpp::Subscription<px4_msgs::msg::SensorDataComputed> sensor_combined_sub_;$/;"	m	class:ShotTypeExecuter	file:	access:private
sensor_combined_sub_	src/shared_control/trajectory_pub.cpp	/^	rclcpp::Subscription<px4_msgs::msg::SensorDataComputed> sensor_combined_sub_;$/;"	m	class:ShotTypeExecuter	file:	access:private
sensor_data_computed_sub_	src/examples/offboard/offboard_control.cpp	/^	rclcpp::Subscription<px4_msgs::msg::SensorDataComputed>::SharedPtr sensor_data_computed_sub_;$/;"	m	class:OffboardControl	file:	access:private
seq	templates/microRTPS_transport.h	/^		uint8_t seq;$/;"	m	struct:Transport_node::Header	access:public
set_msg_files_receive	scripts/uorb_rtps_classifier.py	/^    def set_msg_files_receive(self) -> list:$/;"	m	class:Classifier	access:public
set_msg_files_send	scripts/uorb_rtps_classifier.py	/^    def set_msg_files_send(self) -> list:$/;"	m	class:Classifier	access:public
setpoint_x	src/examples/offboard/offboard_control.cpp	/^	float setpoint_x, setpoint_y, setpoint_z, yaw_desired;$/;"	m	class:OffboardControl	file:	access:private
setpoint_y	src/examples/offboard/offboard_control.cpp	/^	float setpoint_x, setpoint_y, setpoint_z, yaw_desired;$/;"	m	class:OffboardControl	file:	access:private
setpoint_z	src/examples/offboard/offboard_control.cpp	/^	float setpoint_x, setpoint_y, setpoint_z, yaw_desired;$/;"	m	class:OffboardControl	file:	access:private
setup_msg_map	scripts/uorb_rtps_classifier.py	/^    def setup_msg_map(self) -> None:$/;"	m	class:Classifier	access:public
setup_system.bash	scripts/setup_system.bash	1;"	F
shotTypeExecuter::LTS_trajectoryGenerator	src/shared_control/offboard_control_original.cpp	/^void shotTypeExecuter::LTS_trajectoryGenerator() const{$/;"	f	class:shotTypeExecuter	signature:() const
shotTypeExecuter::publish_shotTypetrajectory	src/shared_control/offboard_control_original.cpp	/^void shotTypeExecuter::publish_shotTypetrajectory() const{$/;"	f	class:shotTypeExecuter	signature:() const
shot_type_	src/shared_control/offboard_control_original.cpp	/^	int shot_type_;$/;"	m	class:ShotTypeExecuter	file:	access:private
shot_type_	src/shared_control/trajectory_pub.cpp	/^	int shot_type_;$/;"	m	class:ShotTypeExecuter	file:	access:private
shot_type_enum	src/shared_control/offboard_control_original.cpp	/^	enum shot_type_enum = {$/;"	x	file:
shottype_trajectory_pub_	src/shared_control/offboard_control_original.cpp	/^	rclcpp::Publisher<TrajectorySetpoint>::SharedPtr shottype_trajectory_pub_;$/;"	m	class:ShotTypeExecuter	file:	access:private
shottype_trajectory_pub_	src/shared_control/trajectory_pub.cpp	/^	rclcpp::Publisher<MultiDOFJointTrajectoryPoint>::SharedPtr shottype_trajectory_pub_;$/;"	m	class:ShotTypeExecuter	file:	access:private
shutil	scripts/generate_microRTPS_bridge.py	/^import shutil$/;"	i
shutil	scripts/px_generate_uorb_topic_files.py	/^import shutil$/;"	i
six	scripts/generate_microRTPS_bridge.py	/^    print("Failed to import six: " + e)$/;"	i
sizeof_field_type	scripts/px_generate_uorb_topic_helper.py	/^def sizeof_field_type(field):$/;"	f	access:public
sleep	test/pipeline_io_test.py	/^from time import sleep$/;"	i
sleep	test/test_input.py	/^from time import sleep$/;"	i
subprocess	scripts/generate_microRTPS_bridge.py	/^import subprocess$/;"	i
subscription_	src/examples/listeners/sensor_combined_listener.cpp	/^	rclcpp::Subscription<px4_msgs::msg::SensorCombined>::SharedPtr subscription_;$/;"	m	class:SensorCombinedListener	file:	access:private
subscription_	src/examples/listeners/vehicle_gps_position_listener.cpp	/^	rclcpp::Subscription<px4_msgs::msg::VehicleGpsPosition>::SharedPtr subscription_;$/;"	m	class:VehicleGpsPositionListener	file:	access:private
sys	scripts/generate_microRTPS_bridge.py	/^import sys$/;"	i
sys	scripts/px_generate_uorb_topic_files.py	/^import sys$/;"	i
sys_id	templates/microRTPS_transport.h	/^		uint8_t sys_id;$/;"	m	struct:Transport_node::Header	access:public
takeoff	src/examples/offboard/offboard_control.cpp	/^	void takeoff() const;$/;"	p	class:OffboardControl	file:	access:private	signature:() const
takeoff	src/examples/offboard/offboard_control.cpp	/^void OffboardControl::takeoff() const {$/;"	f	class:OffboardControl	signature:() const
target_position_sub_	src/shared_control/sensor_combined.cpp	/^	rclcpp::Subscription<nav_msgs::msg::Odometry>::SharedPtr target_position_sub_;$/;"	m	class:SensorFusion	file:	access:private
target_x	src/shared_control/sensor_combined.cpp	/^	float target_x;$/;"	m	class:SensorFusion	file:	access:private
target_x_	src/shared_control/offboard_control_original.cpp	/^	float target_x_;$/;"	m	class:ShotTypeExecuter	file:	access:private
target_x_	src/shared_control/trajectory_pub.cpp	/^	float target_x_;$/;"	m	class:ShotTypeExecuter	file:	access:private
target_y	src/shared_control/sensor_combined.cpp	/^	float target_y;$/;"	m	class:SensorFusion	file:	access:private
target_y_	src/shared_control/offboard_control_original.cpp	/^	float target_y_;$/;"	m	class:ShotTypeExecuter	file:	access:private
target_y_	src/shared_control/trajectory_pub.cpp	/^	float target_y_;$/;"	m	class:ShotTypeExecuter	file:	access:private
target_z	src/shared_control/sensor_combined.cpp	/^	float target_z;$/;"	m	class:SensorFusion	file:	access:private
target_z_	src/shared_control/offboard_control_original.cpp	/^	float target_z_;$/;"	m	class:ShotTypeExecuter	file:	access:private
target_z_	src/shared_control/trajectory_pub.cpp	/^	float target_z_;$/;"	m	class:ShotTypeExecuter	file:	access:private
template_tools	scripts/px_generate_uorb_topic_files.py	/^    import genmsg.template_tools$/;"	i
test_cmd	test/test_input.py	/^        os.path.join(args.px4_binary,$/;"	v
test_dir	test/pipeline_io_test.py	/^    test_dir = args.test_dir$/;"	v
test_format	test/pipeline_io_test.py	/^            test_format = ["input", "on"]$/;"	v
test_format	test/pipeline_io_test.py	/^            test_format = ["output", "from"]$/;"	v
test_format	test/pipeline_io_test.py	/^    test_format = list()$/;"	v
test_input.py	test/test_input.py	1;"	F
test_output.py	test/test_output.py	1;"	F
test_result	test/pipeline_io_test.py	/^            test_result = call($/;"	v
test_result	test/pipeline_io_test.py	/^    test_result = -1$/;"	v
test_type	test/pipeline_io_test.py	/^    test_type = args.test_type$/;"	v
timeout	test/test_output.py	/^    timeout = 3  # seconds$/;"	v
timer_	src/examples/advertisers/debug_vect_advertiser.cpp	/^	rclcpp::TimerBase::SharedPtr timer_;$/;"	m	class:DebugVectAdvertiser	file:	access:private
timer_	src/examples/offboard/offboard_control.cpp	/^	rclcpp::TimerBase::SharedPtr timer_;$/;"	m	class:OffboardControl	file:	access:private
timer_	src/examples/offboard/offboard_control_original.cpp	/^	rclcpp::TimerBase::SharedPtr timer_;$/;"	m	class:OffboardControl	file:	access:private
timer_	src/shared_control/offboard_control_original.cpp	/^	rclcpp::TimerBase::SharedPtr timer_;$/;"	m	class:ShotTypeExecuter	file:	access:private
timer_	src/shared_control/sensor_combined.cpp	/^	rclcpp::TimerBase::SharedPtr timer_;$/;"	m	class:SensorFusion	file:	access:private
timer_	src/shared_control/trajectory_pub.cpp	/^	rclcpp::TimerBase::SharedPtr timer_;$/;"	m	class:ShotTypeExecuter	file:	access:private
timestamp_	src/examples/offboard/offboard_control.cpp	/^	std::atomic<uint64_t> timestamp_;   \/\/!< common synced timestamped$/;"	m	class:OffboardControl	file:	access:private
timestamp_	src/examples/offboard/offboard_control_original.cpp	/^	std::atomic<uint64_t> timestamp_;   \/\/!< common synced timestamped$/;"	m	class:OffboardControl	file:	access:private
timestamp_	src/shared_control/offboard_control_original.cpp	/^	std::atomic<uint64_t> timestamp_;   \/\/!< common synced timestamped$/;"	m	class:ShotTypeExecuter	file:	access:private
timestamp_	src/shared_control/sensor_combined.cpp	/^	std::atomic<uint64_t> timestamp_;   \/\/!< common synced timestamped$/;"	m	class:SensorFusion	file:	access:private
timesync_sub_	src/examples/offboard/offboard_control.cpp	/^	rclcpp::Subscription<px4_msgs::msg::Timesync>::SharedPtr timesync_sub_;$/;"	m	class:OffboardControl	file:	access:private
timesync_sub_	src/examples/offboard/offboard_control_original.cpp	/^	rclcpp::Subscription<px4_msgs::msg::Timesync>::SharedPtr timesync_sub_;$/;"	m	class:OffboardControl	file:	access:private
timesync_sub_	src/shared_control/offboard_control_original.cpp	/^	rclcpp::Subscription<px4_msgs::msg::Timesync>::SharedPtr timesync_sub_;$/;"	m	class:ShotTypeExecuter	file:	access:private
timesync_sub_	src/shared_control/sensor_combined.cpp	/^	rclcpp::Subscription<px4_msgs::msg::Timesync>::SharedPtr timesync_sub_;$/;"	m	class:SensorFusion	file:	access:private
topic	test/pipeline_io_test.py	/^            topic = "debug_vect"$/;"	v
topic	test/pipeline_io_test.py	/^            topic = "onboard_computer_status"$/;"	v
topic	test/pipeline_io_test.py	/^            topic = "sensor_combined"$/;"	v
topic	test/pipeline_io_test.py	/^    topic = ""$/;"	v
topic_id	templates/microRTPS_transport.h	/^		uint8_t topic_id;$/;"	m	struct:Transport_node::Header	access:public
trajectory_pub.cpp	src/shared_control/trajectory_pub.cpp	1;"	F
trajectory_setpoint_publisher_	src/examples/offboard/offboard_control.cpp	/^	rclcpp::Publisher<TrajectorySetpoint>::SharedPtr trajectory_setpoint_publisher_;$/;"	m	class:OffboardControl	file:	access:private
trajectory_setpoint_publisher_	src/examples/offboard/offboard_control_original.cpp	/^	rclcpp::Publisher<TrajectorySetpoint>::SharedPtr trajectory_setpoint_publisher_;$/;"	m	class:OffboardControl	file:	access:private
transform_frame	include/px4_ros_com/frame_transforms.h	/^Covariance3d transform_frame(const Covariance3d &cov, const Eigen::Quaterniond &q);$/;"	p	namespace:px4_ros_com::frame_transforms	signature:(const Covariance3d &cov, const Eigen::Quaterniond &q)
transform_frame	include/px4_ros_com/frame_transforms.h	/^Covariance6d transform_frame(const Covariance6d &cov, const Eigen::Quaterniond &q);$/;"	p	namespace:px4_ros_com::frame_transforms	signature:(const Covariance6d &cov, const Eigen::Quaterniond &q)
transform_frame	include/px4_ros_com/frame_transforms.h	/^Covariance9d transform_frame(const Covariance9d &cov, const Eigen::Quaterniond &q);$/;"	p	namespace:px4_ros_com::frame_transforms	signature:(const Covariance9d &cov, const Eigen::Quaterniond &q)
transform_frame	include/px4_ros_com/frame_transforms.h	/^Eigen::Vector3d transform_frame(const Eigen::Vector3d &vec, const Eigen::Quaterniond &q);$/;"	p	namespace:px4_ros_com::frame_transforms	signature:(const Eigen::Vector3d &vec, const Eigen::Quaterniond &q)
transform_frame	src/lib/frame_transforms.cpp	/^Covariance3d transform_frame(const Covariance3d &cov, const Eigen::Quaterniond &q)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const Covariance3d &cov, const Eigen::Quaterniond &q)
transform_frame	src/lib/frame_transforms.cpp	/^Covariance6d transform_frame(const Covariance6d &cov, const Eigen::Quaterniond &q)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const Covariance6d &cov, const Eigen::Quaterniond &q)
transform_frame	src/lib/frame_transforms.cpp	/^Covariance9d transform_frame(const Covariance9d &cov, const Eigen::Quaterniond &q)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const Covariance9d &cov, const Eigen::Quaterniond &q)
transform_frame	src/lib/frame_transforms.cpp	/^Eigen::Vector3d transform_frame(const Eigen::Vector3d &vec, const Eigen::Quaterniond &q)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const Eigen::Vector3d &vec, const Eigen::Quaterniond &q)
transform_orientation	src/lib/frame_transforms.cpp	/^Eigen::Quaterniond transform_orientation(const Eigen::Quaterniond &q, const StaticTF transform)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const Eigen::Quaterniond &q, const StaticTF transform)
transform_static_frame	include/px4_ros_com/frame_transforms.h	/^Covariance3d transform_static_frame(const Covariance3d &cov, const StaticTF transform);$/;"	p	namespace:px4_ros_com::frame_transforms	signature:(const Covariance3d &cov, const StaticTF transform)
transform_static_frame	include/px4_ros_com/frame_transforms.h	/^Covariance6d transform_static_frame(const Covariance6d &cov, const StaticTF transform);$/;"	p	namespace:px4_ros_com::frame_transforms	signature:(const Covariance6d &cov, const StaticTF transform)
transform_static_frame	include/px4_ros_com/frame_transforms.h	/^Covariance9d transform_static_frame(const Covariance9d &cov, const StaticTF transform);$/;"	p	namespace:px4_ros_com::frame_transforms	signature:(const Covariance9d &cov, const StaticTF transform)
transform_static_frame	include/px4_ros_com/frame_transforms.h	/^Eigen::Vector3d transform_static_frame(const Eigen::Vector3d &vec, const Eigen::Vector3d &map_origin,$/;"	p	namespace:px4_ros_com::frame_transforms	signature:(const Eigen::Vector3d &vec, const Eigen::Vector3d &map_origin, const StaticTF transform)
transform_static_frame	include/px4_ros_com/frame_transforms.h	/^Eigen::Vector3d transform_static_frame(const Eigen::Vector3d &vec, const StaticTF transform);$/;"	p	namespace:px4_ros_com::frame_transforms	signature:(const Eigen::Vector3d &vec, const StaticTF transform)
transform_static_frame	src/lib/frame_transforms.cpp	/^Covariance3d transform_static_frame(const Covariance3d &cov, const StaticTF transform)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const Covariance3d &cov, const StaticTF transform)
transform_static_frame	src/lib/frame_transforms.cpp	/^Covariance6d transform_static_frame(const Covariance6d &cov, const StaticTF transform)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const Covariance6d &cov, const StaticTF transform)
transform_static_frame	src/lib/frame_transforms.cpp	/^Covariance9d transform_static_frame(const Covariance9d &cov, const StaticTF transform)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const Covariance9d &cov, const StaticTF transform)
transform_static_frame	src/lib/frame_transforms.cpp	/^Eigen::Vector3d transform_static_frame(const Eigen::Vector3d &vec, const Eigen::Vector3d &map_origin,$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const Eigen::Vector3d &vec, const Eigen::Vector3d &map_origin, const StaticTF transform)
transform_static_frame	src/lib/frame_transforms.cpp	/^Eigen::Vector3d transform_static_frame(const Eigen::Vector3d &vec, const StaticTF transform)$/;"	f	namespace:px4_ros_com::frame_transforms	signature:(const Eigen::Vector3d &vec, const StaticTF transform)
type_idl_map	scripts/px_generate_uorb_topic_helper.py	/^type_idl_map = {$/;"	v
type_map	scripts/px_generate_uorb_topic_helper.py	/^type_map = {$/;"	v
type_map_short	scripts/px_generate_uorb_topic_helper.py	/^type_map_short = {$/;"	v
type_printf_map	scripts/px_generate_uorb_topic_helper.py	/^type_printf_map = {$/;"	v
type_serialize_map	scripts/px_generate_uorb_topic_helper.py	/^type_serialize_map = {$/;"	v
types	include/px4_ros_com/frame_transforms.h	/^namespace types$/;"	n	namespace:px4_ros_com::frame_transforms::utils
types	src/lib/frame_transforms.cpp	/^namespace types$/;"	n	namespace:px4_ros_com::frame_transforms::utils	file:
uRTPS_AGENT_CMAKELISTS_TEMPL_FILE	scripts/generate_microRTPS_bridge.py	/^uRTPS_AGENT_CMAKELISTS_TEMPL_FILE = 'microRTPS_agent_CMakeLists.txt.em'$/;"	v
uRTPS_AGENT_TEMPL_FILE	scripts/generate_microRTPS_bridge.py	/^uRTPS_AGENT_TEMPL_FILE = 'microRTPS_agent.cpp.em'$/;"	v
uRTPS_AGENT_TOPICS_H_TEMPL_FILE	scripts/generate_microRTPS_bridge.py	/^uRTPS_AGENT_TOPICS_H_TEMPL_FILE = 'RtpsTopics.h.em'$/;"	v
uRTPS_AGENT_TOPICS_SRC_TEMPL_FILE	scripts/generate_microRTPS_bridge.py	/^uRTPS_AGENT_TOPICS_SRC_TEMPL_FILE = 'RtpsTopics.cpp.em'$/;"	v
uRTPS_CLIENT_TEMPL_FILE	scripts/generate_microRTPS_bridge.py	/^uRTPS_CLIENT_TEMPL_FILE = 'microRTPS_client.cpp.em'$/;"	v
uRTPS_PUBLISHER_H_TEMPL_FILE	scripts/generate_microRTPS_bridge.py	/^uRTPS_PUBLISHER_H_TEMPL_FILE = 'Publisher.h.em'$/;"	v
uRTPS_PUBLISHER_SRC_TEMPL_FILE	scripts/generate_microRTPS_bridge.py	/^uRTPS_PUBLISHER_SRC_TEMPL_FILE = 'Publisher.cpp.em'$/;"	v
uRTPS_SUBSCRIBER_H_TEMPL_FILE	scripts/generate_microRTPS_bridge.py	/^uRTPS_SUBSCRIBER_H_TEMPL_FILE = 'Subscriber.h.em'$/;"	v
uRTPS_SUBSCRIBER_SRC_TEMPL_FILE	scripts/generate_microRTPS_bridge.py	/^uRTPS_SUBSCRIBER_SRC_TEMPL_FILE = 'Subscriber.cpp.em'$/;"	v
uRTPS_TIMESYNC_CPP_TEMPL_FILE	scripts/generate_microRTPS_bridge.py	/^uRTPS_TIMESYNC_CPP_TEMPL_FILE = 'microRTPS_timesync.cpp.em'$/;"	v
uRTPS_TIMESYNC_H_TEMPL_FILE	scripts/generate_microRTPS_bridge.py	/^uRTPS_TIMESYNC_H_TEMPL_FILE = 'microRTPS_timesync.h.em'$/;"	v
universal_newlines	test/pipeline_io_test.py	/^                universal_newlines=True)$/;"	v
uorb_rtps_classifier.py	scripts/uorb_rtps_classifier.py	1;"	F
uorb_templates_dir	scripts/generate_microRTPS_bridge.py	/^uorb_templates_dir = (args.uorb_templates if os.path.isabs(args.uorb_templates)$/;"	v
urtps_templates_dir	scripts/generate_microRTPS_bridge.py	/^urtps_templates_dir = (args.urtps_templates if os.path.isabs(args.urtps_templates)$/;"	v
utils	include/px4_ros_com/frame_transforms.h	/^namespace utils$/;"	n	namespace:px4_ros_com::frame_transforms
utils	src/lib/frame_transforms.cpp	/^namespace utils$/;"	n	namespace:px4_ros_com::frame_transforms	file:
vehicle_command_publisher_	src/examples/offboard/offboard_control.cpp	/^	rclcpp::Publisher<VehicleCommand>::SharedPtr vehicle_command_publisher_;$/;"	m	class:OffboardControl	file:	access:private
vehicle_command_publisher_	src/examples/offboard/offboard_control_original.cpp	/^	rclcpp::Publisher<VehicleCommand>::SharedPtr vehicle_command_publisher_;$/;"	m	class:OffboardControl	file:	access:private
vehicle_gps_position_listener.cpp	src/examples/listeners/vehicle_gps_position_listener.cpp	1;"	F
vehicle_position_sub_	src/shared_control/sensor_combined.cpp	/^	rclcpp::Subscription<px4_msgs::msg::VehicleOdometry>::SharedPtr vehicle_position_sub_;$/;"	m	class:SensorFusion	file:	access:private
vehicle_x	src/shared_control/sensor_combined.cpp	/^	float vehicle_x, vehicle_xv;$/;"	m	class:SensorFusion	file:	access:private
vehicle_x_	src/shared_control/offboard_control_original.cpp	/^	float vehicle_x_, vehicle_xv_;$/;"	m	class:ShotTypeExecuter	file:	access:private
vehicle_x_	src/shared_control/trajectory_pub.cpp	/^	float vehicle_x_, vehicle_xv_;$/;"	m	class:ShotTypeExecuter	file:	access:private
vehicle_xv	src/shared_control/sensor_combined.cpp	/^	float vehicle_x, vehicle_xv;$/;"	m	class:SensorFusion	file:	access:private
vehicle_xv_	src/shared_control/offboard_control_original.cpp	/^	float vehicle_x_, vehicle_xv_;$/;"	m	class:ShotTypeExecuter	file:	access:private
vehicle_xv_	src/shared_control/trajectory_pub.cpp	/^	float vehicle_x_, vehicle_xv_;$/;"	m	class:ShotTypeExecuter	file:	access:private
vehicle_y	src/shared_control/sensor_combined.cpp	/^	float vehicle_y, vehicle_yv;$/;"	m	class:SensorFusion	file:	access:private
vehicle_y_	src/shared_control/offboard_control_original.cpp	/^	float vehicle_y_, vehicle_yv_;$/;"	m	class:ShotTypeExecuter	file:	access:private
vehicle_y_	src/shared_control/trajectory_pub.cpp	/^	float vehicle_y_, vehicle_yv_;$/;"	m	class:ShotTypeExecuter	file:	access:private
vehicle_yv	src/shared_control/sensor_combined.cpp	/^	float vehicle_y, vehicle_yv;$/;"	m	class:SensorFusion	file:	access:private
vehicle_yv_	src/shared_control/offboard_control_original.cpp	/^	float vehicle_y_, vehicle_yv_;$/;"	m	class:ShotTypeExecuter	file:	access:private
vehicle_yv_	src/shared_control/trajectory_pub.cpp	/^	float vehicle_y_, vehicle_yv_;$/;"	m	class:ShotTypeExecuter	file:	access:private
vehicle_z	src/shared_control/sensor_combined.cpp	/^	float vehicle_z, vehicle_zv;$/;"	m	class:SensorFusion	file:	access:private
vehicle_z_	src/shared_control/offboard_control_original.cpp	/^	float vehicle_z_, vehicle_zv_;$/;"	m	class:ShotTypeExecuter	file:	access:private
vehicle_z_	src/shared_control/trajectory_pub.cpp	/^	float vehicle_z_, vehicle_zv_;$/;"	m	class:ShotTypeExecuter	file:	access:private
vehicle_zv	src/shared_control/sensor_combined.cpp	/^	float vehicle_z, vehicle_zv;$/;"	m	class:SensorFusion	file:	access:private
vehicle_zv_	src/shared_control/offboard_control_original.cpp	/^	float vehicle_z_, vehicle_zv_;$/;"	m	class:ShotTypeExecuter	file:	access:private
vehicle_zv_	src/shared_control/trajectory_pub.cpp	/^	float vehicle_z_, vehicle_zv_;$/;"	m	class:ShotTypeExecuter	file:	access:private
version	scripts/generate_microRTPS_bridge.py	/^    from packaging import version$/;"	i
version	scripts/px_generate_uorb_topic_files.py	/^    from packaging import version$/;"	i
write	templates/microRTPS_transport.cpp	/^ssize_t Transport_node::write(const uint8_t topic_id, char buffer[], size_t length)$/;"	f	class:Transport_node	signature:(const uint8_t topic_id, char buffer[], size_t length)
write	templates/microRTPS_transport.h	/^	ssize_t write(const uint8_t topic_id, char buffer[], size_t length);$/;"	p	class:Transport_node	access:public	signature:(const uint8_t topic_id, char buffer[], size_t length)
yaml	scripts/uorb_rtps_classifier.py	/^import yaml$/;"	i
yaw_desired	src/examples/offboard/offboard_control.cpp	/^	float setpoint_x, setpoint_y, setpoint_z, yaw_desired;$/;"	m	class:OffboardControl	file:	access:private
~Transport_node	templates/microRTPS_transport.cpp	/^Transport_node::~Transport_node()$/;"	f	class:Transport_node	signature:()
~Transport_node	templates/microRTPS_transport.h	/^	virtual ~Transport_node();$/;"	p	class:Transport_node	access:public	signature:()
~UART_node	templates/microRTPS_transport.cpp	/^UART_node::~UART_node()$/;"	f	class:UART_node	signature:()
~UART_node	templates/microRTPS_transport.h	/^	virtual ~UART_node();$/;"	p	class:UART_node	access:public	signature:()
~UDP_node	templates/microRTPS_transport.cpp	/^UDP_node::~UDP_node()$/;"	f	class:UDP_node	signature:()
~UDP_node	templates/microRTPS_transport.h	/^	virtual ~UDP_node();$/;"	p	class:UDP_node	access:public	signature:()
